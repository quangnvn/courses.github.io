{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/admin/add-category/add-category.component.html","webpack:///src/app/components/admin/add-category/add-category.component.ts","webpack:///src/app/components/admin/add-product/add-product.component.html","webpack:///src/app/components/admin/add-product/add-product.component.ts","webpack:///src/app/components/admin/admin.component.ts","webpack:///src/app/components/admin/admin.component.html","webpack:///src/app/components/admin/update-category/update-category.component.html","webpack:///src/app/components/admin/update-category/update-category.component.ts","webpack:///src/app/components/admin/update-news/update-news.component.html","webpack:///src/app/components/admin/update-news/update-news.component.ts","webpack:///src/app/components/admin/update-product/update-product.component.html","webpack:///src/app/components/admin/update-product/update-product.component.ts","webpack:///src/app/components/admin/view-categories/view-categories.component.html","webpack:///src/app/components/admin/view-categories/view-categories.component.ts","webpack:///src/app/components/admin/view-news/view-news.component.html","webpack:///src/app/components/admin/view-news/view-news.component.ts","webpack:///src/app/components/admin/view-product/view-product.component.html","webpack:///src/app/components/admin/view-product/view-product.component.ts","webpack:///src/app/components/auth/auth.component.ts","webpack:///src/app/components/auth/auth.component.html","webpack:///src/app/components/auth/change-password/change-password.component.html","webpack:///src/app/components/auth/change-password/change-password.component.ts","webpack:///src/app/components/auth/login/login.component.html","webpack:///src/app/components/auth/login/login.component.ts","webpack:///src/app/components/auth/register/register.component.html","webpack:///src/app/components/auth/register/register.component.ts","webpack:///src/app/components/news/news-detail/news-detail.component.html","webpack:///src/app/components/news/news-detail/news-detail.component.ts","webpack:///src/app/components/news/news-list/news-list.component.html","webpack:///src/app/components/news/news-list/news-list.component.ts","webpack:///src/app/components/news/news.component.ts","webpack:///src/app/components/news/news.component.html","webpack:///src/app/components/others/others-detail/others-detail.component.html","webpack:///src/app/components/others/others-detail/others-detail.component.ts","webpack:///src/app/components/others/others-list/others-list.component.html","webpack:///src/app/components/others/others-list/others-list.component.ts","webpack:///src/app/components/others/others.component.ts","webpack:///src/app/components/others/others.component.html","webpack:///src/app/components/products/about-us/about-us.component.ts","webpack:///src/app/components/products/about-us/about-us.component.html","webpack:///src/app/components/products/cart-new/cart-item-card/cart-item-card.component.ts","webpack:///src/app/components/products/cart-new/cart-item-card/cart-item-card.component.html","webpack:///src/app/components/products/cart-new/cart-new.component.html","webpack:///src/app/components/products/cart-new/cart-new.component.ts","webpack:///src/app/components/products/checkout/cart-summary/cart-summary.component.ts","webpack:///src/app/components/products/checkout/cart-summary/cart-summary.component.html","webpack:///src/app/components/products/checkout/checkout.component.html","webpack:///src/app/components/products/checkout/checkout.component.ts","webpack:///src/app/components/products/orders/order-details-new/order-details-new.component.html","webpack:///src/app/components/products/orders/order-details-new/order-details-new.component.ts","webpack:///src/app/components/products/orders/order-details-new/product-detail-card/product-detail-card.component.html","webpack:///src/app/components/products/orders/order-details-new/product-detail-card/product-detail-card.component.ts","webpack:///src/app/components/products/orders/order-history-new/order-history-new.component.html","webpack:///src/app/components/products/orders/order-history-new/order-history-new.component.ts","webpack:///src/app/components/products/orders/orders.component.ts","webpack:///src/app/components/products/orders/orders.component.html","webpack:///src/app/components/products/product-details/product-details.component.html","webpack:///src/app/components/products/product-details/product-details.component.ts","webpack:///src/app/components/products/product-list/product-card/product-card.component.ts","webpack:///src/app/components/products/product-list/product-card/product-card.component.html","webpack:///src/app/components/products/product-list/product-grid/product-grid.component.html","webpack:///src/app/components/products/product-list/product-grid/product-grid.component.ts","webpack:///src/app/components/products/product-list/product-list.component.html","webpack:///src/app/components/products/product-list/product-list.component.ts","webpack:///src/app/components/products/products.component.ts","webpack:///src/app/components/products/products.component.html","webpack:///src/app/guards/auth-access.guard.ts","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/material-custom/material-custom.module.ts","webpack:///src/app/models/cart-item.ts","webpack:///src/app/models/category-type.ts","webpack:///src/app/models/news.ts","webpack:///src/app/models/product-new.ts","webpack:///src/app/models/product-status.model.ts","webpack:///src/app/providers/global-error-handler.ts","webpack:///src/app/providers/http-error.interceptor.ts","webpack:///src/app/providers/index.ts","webpack:///src/app/providers/jwt-token.interceptor.ts","webpack:///src/app/services/access-denied-modal.service.ts","webpack:///src/app/services/auth-modal.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/base-rest.service.ts","webpack:///src/app/services/cart-confirm-modal.service.ts","webpack:///src/app/services/cart.service.ts","webpack:///src/app/services/category.service.ts","webpack:///src/app/services/delivery-history.service.ts","webpack:///src/app/services/event.service.ts","webpack:///src/app/services/form-submit-modal.service.ts","webpack:///src/app/services/global-error-modal.service.ts","webpack:///src/app/services/loading.service.ts","webpack:///src/app/services/manage-user.service.ts","webpack:///src/app/services/news.service.ts","webpack:///src/app/services/order-cancel-modal.service.ts","webpack:///src/app/services/order.service.ts","webpack:///src/app/services/product.service.ts","webpack:///src/app/services/update-status-modal.service.ts","webpack:///src/app/shared/access-denied-modal/access-denied-modal.component.html","webpack:///src/app/shared/access-denied-modal/access-denied-modal.component.ts","webpack:///src/app/shared/access-denied/access-denied.component.ts","webpack:///src/app/shared/access-denied/access-denied.component.html","webpack:///src/app/shared/auth-modal/auth-modal.component.html","webpack:///src/app/shared/auth-modal/auth-modal.component.ts","webpack:///src/app/shared/cart-confirm-modal/cart-confirm-modal.component.html","webpack:///src/app/shared/cart-confirm-modal/cart-confirm-modal.component.ts","webpack:///src/app/shared/footer/footer.component.ts","webpack:///src/app/shared/footer/footer.component.html","webpack:///src/app/shared/form-submit-modal/form-submit-modal.component.html","webpack:///src/app/shared/form-submit-modal/form-submit-modal.component.ts","webpack:///src/app/shared/global-error-modal/global-error-modal.component.html","webpack:///src/app/shared/global-error-modal/global-error-modal.component.ts","webpack:///src/app/shared/navigation/navigation.component.html","webpack:///src/app/shared/navigation/navigation.component.ts","webpack:///src/app/shared/not-found/not-found.component.ts","webpack:///src/app/shared/not-found/not-found.component.html","webpack:///src/app/shared/order-cancel-modal/order-cancel-modal.component.html","webpack:///src/app/shared/order-cancel-modal/order-cancel-modal.component.ts","webpack:///src/app/shared/update-status-modal/update-status-modal.component.html","webpack:///src/app/shared/update-status-modal/update-status-modal.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ignored|/home/quangnvn/Projects/envispace/envi-front/shopme/node_modules/xlsx|crypto","webpack:///ignored|/home/quangnvn/Projects/envispace/envi-front/shopme/node_modules/xlsx|fs","webpack:///ignored|/home/quangnvn/Projects/envispace/envi-front/shopme/node_modules/xlsx|stream"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","routes","path","component","AuthComponent","canActivate","AuthAccessGuard","children","LoginComponent","RegisterComponent","ChangePasswordComponent","NewsComponent","NewsListComponent","NewsDetailComponent","OthersComponent","OthersListComponent","OthersDetailComponent","ProductsComponent","ProductListComponent","CartNewComponent","AboutUsComponent","CheckoutComponent","AuthGuard","CartSummaryComponent","redirectTo","pathMatch","ProductDetailsComponent","AdminComponent","AddProductComponent","ViewProductComponent","ViewCategoriesComponent","AddCategoryComponent","ViewNewsComponent","UpdateNewsComponent","NotFoundComponent","AccessDeniedComponent","AppRoutingModule","RouterModule","AppComponent","scroll","pageYoffset","event","window","pageYOffset","scrollToPosition","AppModule","provide","LocationStrategy","useClass","PathLocationStrategy","httpInterceptors","JwtHelperService","NgxEditorModule","BrowserModule","BrowserAnimationsModule","ReactiveFormsModule","HttpClientModule","FormsModule","MaterialCustomModule","CommonModule","NgImageSliderModule","ProductGridComponent","UpdateProductComponent","OrdersComponent","FooterComponent","NavigationComponent","ProductCardComponent","AuthModalComponent","CartConfirmModalComponent","OrderCancelModalComponent","GlobalErrorModalComponent","AccessDeniedModalComponent","UpdateCategoryComponent","OrderDetailsNewComponent","ProductDetailCardComponent","UpdateStatusModalComponent","FormSubmitModalComponent","CartItemCardComponent","OrderHistoryNewComponent","categoryService","route","location","router","loadingService","categories","categoryType","CategoryType","getParamenter","fetchAllCategories","categoryId","snapshot","params","typeId","enableLoading","fetchById","subscribe","response","find","p","disableLoading","updateType","data","localStorage","setItem","navigate","createType","back","saveCategory","moveBack","service","categoryTypes","product","ProductNew","onChangeCategory","fetchAllType","cId","datetime","updateProduct","addProduct","saveProduct","formModal","submitted","categoryImageUrl","initForm","populateData","updateCategoryForm","FormGroup","FormControl","categoryName","Validators","categoryDescription","res","category","populateFormFields","patchValue","valid","submitData","value","formData","image","goBack","submitForm","updateImage","resetToDefault","newsService","newsImageUrl","editor","Editor","newsId","news","News","updateNewsForm","title","newsType","content","imagesUrl","length","push","update","create","destroy","productService","statuses","productIcon","productId","updateProductForm","productName","productPrice","discountPercent","productStock","productDescription","productStatus","closed","open","error","message","errors","forEach","element","controls","field","setErrors","serverValidationError","console","log","dataSource","MatTableDataSource","displayedColumns","fetchAllTypes","getItem","removeItem","categorySubscription","fetchTypesByCategory","sort","paginator","filterValue","filter","trim","toLowerCase","unsubscribe","confirm","name","deleteType","MatSort","MatPaginator","doFilter","fetchAllNews","newsSubscription","fetchAll","products","pageIndex","pageSize","fileName","getCategories","fetchAllProducts","categoryTypeId","pageOption","size","page","productSubscription","findByCategoryType","findByCategoryId","cat","productNew","x","toString","replace","worksheet","workbook","Sheets","SheetNames","onChangeCategoryType","exportExcel","authService","eventService","success","question","resetPasswordSubscription","initPasswordResetForm","resetPasswordForm","submitResetForm","getRawValue","username","requestPasswordReset","setTimeout","navigateByUrl","resetPasswordData","securityQuestion","disabled","newPassword","securityAnswer","resetPassword","ngZone","logo","loginSubscription","redirectIfLoggedIn","returnUrl","queryParams","googleLogin","loginForm","login","password","auth2","attachClickHandler","googleUser","run","FB","authResponse","api","fields","manageUserService","maxDate","Date","setFullYear","getFullYear","toISOString","slice","userForm","addUser","addUserSubscription","firstName","lastName","phoneNo","emailId","password2","address","state","area","city","pincode","validators","matchPassword","control","get","passwordMatchError","paramMap","getDetails","activatedRoute","newsList","orignalNewsList","pages","fetchByType","numberOfPage","Math","ceil","Array","fill","map","i","changePage","start","end","target","src","html","text","substring","fetchAllOthers","removeItemEvent","EventEmitter","emit","deleteProduct","cartItems","loadCardItems","JSON","parse","calculatePrice","totalPrice","number","price","index","findIndex","splice","stringify","stages","color","activeStages","routeChangeSubscription","routeSubscription","events","pipe","NavigationEnd","val","updateFlow","url","includes","orderService","deliveryHistoryService","orderCancelModal","orderId","fetchOrderDetails","fetchDeliveryDetails","fetchDeliveryByOrderId","take","deliveryHistory","tap","orderDetails","date","toLocaleDateString","weekday","year","month","day","hour","minute","hour12","watch","updateOrderStatus","status","orderStatus","orderHistory","fetchAllOrders","fetchByLoggedInUserId","next","reverse","complete","authModalService","cartService","cartModal","count","disabledAddCart","initializeProductDetails","cartItem","CartItem","trigger","categoryChanged","isAuthenticated","on","cart","imgtodrag","eq","imgclone","clone","offset","top","left","css","appendTo","animate","effect","times","detach","decrement","increment","addNewItem","moveToDetail","deviceDetectorService","isMobile","modalService","cartConfirmModal","productList","has","initProducts","getTypes","fetchProductsByType","fetchProductsByCategory","getTypesByCategory","types","result","itemId","item","quantity","checkForAuthAndShowPopUp","addToCart","updateProductionList","authServie","modalAuthService","MatDialogModule","MatButtonModule","MatTableModule","MatSortModule","MatPaginatorModule","MatCardModule","MatFormFieldModule","MatProgressSpinnerModule","MatInputModule","MatSelectModule","MatIconModule","description","ProductStatus","GlobalErrorHandler","HttpErrorResponse","logout","HttpErrorInterceptor","request","handle","catchError","handleErrorResponse","throwError","ErrorEvent","statusText","HTTP_INTERCEPTORS","JwtTokenInterceptor","multi","JWT_OPTIONS","useValue","ErrorHandler","headers","authReq","token","fetchFromSessionStorage","undefined","append","AccessDeniedModalService","display","BehaviorSubject","asObservable","AuthModalService","redirectUrl","AuthService","http","jwtHelper","eventServie","authServiceUrl","environment","post","user","saveToSessionStorage","loggedInUser","sessionStorage","clear","put","role","BaseRestService","HttpHeaders","inputObject","Object","reduce","outputObject","key","inputValue","set","FormData","inputObjects","removeEmptyPropertyFromObject","encodeURIComponent","join","CartConfirmModalService","CartService","cartServiceUrl","userId","CategoryService","categoryServiceUrl","DeliveryHistoryService","orderServiceUrl","EventService","searchQueryChanged","FormSubmitModalService","GlobalErrorModalService","LoadingService","loading","ManageUserService","NewsService","serviceUrl","OrderCancelModalService","OrderService","fetchByUserId","ProductService","productServiceUrl","pageParams","options","UpdateStatusModalService","$event","stopPropagation","display$","close","previousPage","openSubscription","deviceService","designCategories","paintCategories","tileCategories","otherCategories","ishowMenu","isLogin","imageObject","thumbImage","alt","order","menuIcon","numberOfItemInCart","href","toLocaleLowerCase","indexOf","cancelOrder","statusTypes","currentStatus","production","protocol","applicationUrl","paymentService","mapQuestAPIKey","mapQuestUrl","from","enableProdMode","platformBrowser","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddCategoryComponent } from './components/admin/add-category/add-category.component';\nimport { AddProductComponent } from './components/admin/add-product/add-product.component';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { UpdateNewsComponent } from './components/admin/update-news/update-news.component';\nimport { ViewCategoriesComponent } from './components/admin/view-categories/view-categories.component';\nimport { ViewNewsComponent } from './components/admin/view-news/view-news.component';\nimport { ViewProductComponent } from './components/admin/view-product/view-product.component';\nimport { AuthComponent } from './components/auth/auth.component';\nimport { ChangePasswordComponent } from './components/auth/change-password/change-password.component';\nimport { LoginComponent } from './components/auth/login/login.component';\nimport { RegisterComponent } from './components/auth/register/register.component';\nimport { NewsDetailComponent } from './components/news/news-detail/news-detail.component';\nimport { NewsListComponent } from './components/news/news-list/news-list.component';\nimport { NewsComponent } from './components/news/news.component';\nimport { OthersDetailComponent } from './components/others/others-detail/others-detail.component';\nimport { OthersListComponent } from './components/others/others-list/others-list.component';\nimport { OthersComponent } from './components/others/others.component';\nimport { AboutUsComponent } from './components/products/about-us/about-us.component';\nimport { CartNewComponent } from './components/products/cart-new/cart-new.component';\nimport { CartSummaryComponent } from './components/products/checkout/cart-summary/cart-summary.component';\nimport { CheckoutComponent } from './components/products/checkout/checkout.component';\nimport { ProductDetailsComponent } from './components/products/product-details/product-details.component';\nimport { ProductListComponent } from './components/products/product-list/product-list.component';\nimport { ProductsComponent } from './components/products/products.component';\nimport { AuthAccessGuard } from './guards/auth-access.guard';\nimport { AuthGuard } from './guards/auth.guard';\nimport { AccessDeniedComponent } from './shared/access-denied/access-denied.component';\nimport { NotFoundComponent } from './shared/not-found/not-found.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'auth',\n    component: AuthComponent,\n    canActivate: [AuthAccessGuard],\n    children: [\n      {\n        path: 'login',\n        component: LoginComponent,\n      },\n      {\n        path: 'register',\n        component: RegisterComponent,\n      },\n      {\n        path: 'changepassword',\n        component: ChangePasswordComponent,\n      },\n    ],\n  },\n  {\n    path: 'news',\n    component: NewsComponent,\n    children: [\n      { path: '', component: NewsListComponent },\n      { path: ':id', component: NewsDetailComponent }\n    ],\n  },\n  {\n    path: 'others',\n    component: OthersComponent,\n    children: [\n      { path: '', component: OthersListComponent },\n      { path: ':id', component: OthersDetailComponent }\n    ],\n  },\n  {\n    path: 'products',\n    component: ProductsComponent,\n    children: [\n      { path: '', component: ProductListComponent },\n      { path: 'cart', component: CartNewComponent },\n      { path: 'about', component: AboutUsComponent },\n      {\n        path: 'checkout',\n        component: CheckoutComponent,\n        canActivate: [AuthGuard],\n        children: [\n          { path: 'summary', component: CartSummaryComponent },\n          { path: '', redirectTo: 'shipping', pathMatch: 'full' },\n        ],\n      },\n      { path: 'detail/:productId', component: ProductDetailsComponent },\n      { path: ':categoryId/:typeId', component: ProductListComponent },\n      { path: ':categoryId', component: ProductListComponent }\n    ],\n  },\n  {\n    path: 'admin',\n    component: AdminComponent,\n    canActivate: [AuthGuard],\n    children: [\n      { path: 'add', component: AddProductComponent },\n      { path: 'view', component: ViewProductComponent },\n      { path: 'categoryview', component: ViewCategoriesComponent },\n      { path: 'categoryadd', component: AddCategoryComponent },\n      { path: 'categoryedit/:categoryId/:typeId', component: AddCategoryComponent },\n      { path: 'newsview', component: ViewNewsComponent },\n      { path: 'newsadd', component: UpdateNewsComponent },\n      { path: 'newsedit/:id', component: UpdateNewsComponent },\n      { path: '', redirectTo: 'view', pathMatch: 'full' },\n      { path: 'product/:id', component: AddProductComponent },\n    ],\n  },\n  { path: 'about', redirectTo: 'products/about', pathMatch: 'full' },\n  { path: '404', component: NotFoundComponent },\n  { path: '403', component: AccessDeniedComponent },\n  { path: '', redirectTo: 'products', pathMatch: 'full' },\n  { path: '**', redirectTo: 'products' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n","<router-outlet> </router-outlet>\n\n<app-auth-modal></app-auth-modal>\n\n<app-access-denied-modal></app-access-denied-modal>\n\n<app-global-error-modal></app-global-error-modal>\n\n<app-form-submit-modal></app-form-submit-modal>\n\n<img class=\"back-to-top\" (click)=\"scrollToTop()\" *ngIf=\"pageYoffset > 500\" src=\"assets/images/top.svg\" alt=\"\" />","import { ViewportScroller } from '@angular/common';\nimport { Component, HostListener } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  pageYoffset = 0;\n\n  @HostListener('window:scroll', ['$event']) onScroll(event) {\n    this.pageYoffset = window.pageYOffset;\n  }\n\n  constructor(private scroll: ViewportScroller) { }\n\n  scrollToTop() {\n    this.scroll.scrollToPosition([0, 0]);\n  }\n}\n","import { CommonModule, LocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { NgImageSliderModule } from 'ng-image-slider';\nimport { NgxEditorModule } from 'ngx-editor';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AddCategoryComponent } from './components/admin/add-category/add-category.component';\nimport { AddProductComponent } from './components/admin/add-product/add-product.component';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { UpdateCategoryComponent } from './components/admin/update-category/update-category.component';\nimport { UpdateNewsComponent } from './components/admin/update-news/update-news.component';\nimport { UpdateProductComponent } from './components/admin/update-product/update-product.component';\nimport { ViewCategoriesComponent } from './components/admin/view-categories/view-categories.component';\nimport { ViewNewsComponent } from './components/admin/view-news/view-news.component';\nimport { ViewProductComponent } from './components/admin/view-product/view-product.component';\nimport { AuthComponent } from './components/auth/auth.component';\nimport { ChangePasswordComponent } from './components/auth/change-password/change-password.component';\nimport { LoginComponent } from './components/auth/login/login.component';\nimport { RegisterComponent } from './components/auth/register/register.component';\nimport { NewsDetailComponent } from './components/news/news-detail/news-detail.component';\nimport { NewsListComponent } from './components/news/news-list/news-list.component';\nimport { NewsComponent } from './components/news/news.component';\nimport { OthersDetailComponent } from './components/others/others-detail/others-detail.component';\nimport { OthersListComponent } from './components/others/others-list/others-list.component';\nimport { OthersComponent } from './components/others/others.component';\nimport { AboutUsComponent } from './components/products/about-us/about-us.component';\nimport { CartItemCardComponent } from './components/products/cart-new/cart-item-card/cart-item-card.component';\nimport { CartNewComponent } from './components/products/cart-new/cart-new.component';\nimport { CartSummaryComponent } from './components/products/checkout/cart-summary/cart-summary.component';\nimport { CheckoutComponent } from './components/products/checkout/checkout.component';\nimport { OrderDetailsNewComponent } from './components/products/orders/order-details-new/order-details-new.component';\nimport { ProductDetailCardComponent } from './components/products/orders/order-details-new/product-detail-card/product-detail-card.component';\nimport { OrderHistoryNewComponent } from './components/products/orders/order-history-new/order-history-new.component';\nimport { OrdersComponent } from './components/products/orders/orders.component';\nimport { ProductDetailsComponent } from './components/products/product-details/product-details.component';\nimport { ProductCardComponent } from './components/products/product-list/product-card/product-card.component';\nimport { ProductGridComponent } from './components/products/product-list/product-grid/product-grid.component';\nimport { ProductListComponent } from './components/products/product-list/product-list.component';\nimport { ProductsComponent } from './components/products/products.component';\nimport { MaterialCustomModule } from './material-custom/material-custom.module';\nimport { httpInterceptors } from './providers';\nimport { AccessDeniedModalComponent } from './shared/access-denied-modal/access-denied-modal.component';\nimport { AccessDeniedComponent } from './shared/access-denied/access-denied.component';\nimport { AuthModalComponent } from './shared/auth-modal/auth-modal.component';\nimport { CartConfirmModalComponent } from './shared/cart-confirm-modal/cart-confirm-modal.component';\nimport { FooterComponent } from './shared/footer/footer.component';\nimport { FormSubmitModalComponent } from './shared/form-submit-modal/form-submit-modal.component';\nimport { GlobalErrorModalComponent } from './shared/global-error-modal/global-error-modal.component';\nimport { NavigationComponent } from './shared/navigation/navigation.component';\nimport { NotFoundComponent } from './shared/not-found/not-found.component';\nimport { OrderCancelModalComponent } from './shared/order-cancel-modal/order-cancel-modal.component';\nimport { UpdateStatusModalComponent } from './shared/update-status-modal/update-status-modal.component';\n\n@NgModule({\n  declarations: [\n    NewsComponent,\n    NewsListComponent,\n    NewsDetailComponent,\n    OthersComponent,\n    OthersListComponent,\n    OthersDetailComponent,\n    UpdateNewsComponent,\n    ViewNewsComponent,\n    ProductGridComponent,\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProductDetailsComponent,\n    CartSummaryComponent,\n    AddProductComponent,\n    ViewProductComponent,\n    UpdateProductComponent,\n    ProductsComponent,\n    OrdersComponent,\n    CheckoutComponent,\n    AdminComponent,\n    FooterComponent,\n    NotFoundComponent,\n    NavigationComponent,\n    ChangePasswordComponent,\n    AboutUsComponent,\n    ProductListComponent,\n    ProductCardComponent,\n    AccessDeniedComponent,\n    AuthModalComponent,\n    CartConfirmModalComponent,\n    OrderCancelModalComponent,\n    GlobalErrorModalComponent,\n    AccessDeniedModalComponent,\n    ViewCategoriesComponent,\n    UpdateCategoryComponent,\n    AddCategoryComponent,\n    OrderDetailsNewComponent,\n    ProductDetailCardComponent,\n    UpdateStatusModalComponent,\n    FormSubmitModalComponent,\n    CartNewComponent,\n    CartItemCardComponent,\n    OrderHistoryNewComponent,\n    AuthComponent,\n  ],\n  imports: [\n    NgxEditorModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormsModule,\n    MaterialCustomModule,\n    RouterModule,\n    CommonModule,\n    NgImageSliderModule\n  ],\n  providers: [\n    { provide: LocationStrategy, useClass: PathLocationStrategy },\n    httpInterceptors,\n    JwtHelperService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css\" />\n\n<div class=\"container\" style=\"margin-top: 40px\">\n  <div class=\"card bg-light\">\n    <h1 style=\"text-align: center; text-transform: uppercase;padding-top:20px\">{{categoryType.id? \"Update Type\": \"Create\n      Type\"}}</h1>\n    <article class=\"card-body mx-auto\" style=\"width: 100%\">\n      <form (ngSubmit)=\"saveCategory()\" #addCategory=\"ngForm\" class=\"needs-validation\">\n        <div class=\"form-group input-group\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">\n              <em class=\"fa\" style=\"font-size: 1.5em; color: #f56774\">Category *</em>\n            </span>\n          </div>\n          <select style=\"width: 100%; height: 40px;\" name=\"categories\" id=\"categories\" #categoryId=\"ngModel\" required\n            aria-placeholder=\"Choose a category...\" [(ngModel)]=\"categoryType.categoryId\">\n            <option value=\"\" disabled=\"true\" selected>Choose a category...</option>\n            <option *ngFor=\"let category of categories\" value=\"{{category.id}}\">{{category.name}}</option>\n          </select>\n          <br />\n          <div *ngIf=\"\n          categoryId.invalid && categoryId.touched && categoryId.dirty\n          \" class=\"alert alert-danger\">\n            Choose a category\n          </div>\n        </div>\n        <div class=\"form-group input-group\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">\n              <em class=\"fa\" style=\"font-size: 1.5em; color: #f56774\">Name *</em>\n            </span>\n          </div>\n          <input pattern=\".{1,}\" name=\"categoryName\" id=\"categoryName\" [(ngModel)]=\"categoryType.name\"\n            #categoryName=\"ngModel\" class=\"form-control\" type=\"text\" />\n          <br />\n          <div *ngIf=\"\n              categoryName.invalid && categoryName.touched && categoryName.dirty\n            \" class=\"alert alert-danger\">\n            At least 2 characters long!\n          </div>\n        </div>\n        <!-- form-group// -->\n        <!-- form-group// -->\n        <div class=\"form-group input-group\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">\n              <em class=\"fa\" style=\"font-size: 1.5em; color: #f56774\">Description</em>\n            </span>\n          </div>\n          <input pattern=\".{1,}\" name=\"categoryDescription\" id=\"categoryDescription\"\n            [(ngModel)]=\"categoryType.description\" #categoryDescription=\"ngModel\" class=\"form-control\"\n            placeholder=\"Description\" type=\"text\" />\n          <br />\n          <div *ngIf=\"\n            categoryDescription.invalid && categoryDescription.touched && categoryDescription.dirty\n            \" class=\"alert alert-danger\">\n            At least 2 characters long!\n          </div>\n        </div>\n        <!-- form-group// -->\n\n        <div class=\"form-group\">\n          <button type=\"submit\" [disabled]=\"!addCategory.valid\" class=\"btn btn-primary btn-block\">\n            Save\n          </button>\n        </div>\n        <div class=\"form-group\">\n          <button (click)=\"moveBack()\" type=\"button\" class=\"btn btn-second btn-block\">\n            Cancel\n          </button>\n        </div>\n        <!-- form-group// -->\n      </form>\n    </article>\n  </div>\n  <!-- card.// -->\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CategoryNew } from 'src/app/models/category-new';\nimport { CategoryType } from 'src/app/models/category-type';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { CategoryService } from 'src/app/services/category.service';\n\n@Component({\n  selector: 'app-add-category',\n  templateUrl: './add-category.component.html',\n  styleUrls: ['./add-category.component.scss'],\n})\nexport class AddCategoryComponent implements OnInit {\n  categoryType: CategoryType;\n  categories: CategoryNew[] = [];\n  categoryId: string;\n  typeId: string;\n\n  constructor(private categoryService: CategoryService,\n    private route: ActivatedRoute,\n    private location: Location,\n    private router: Router,\n    public loadingService: LoadingService) {\n    this.categoryType = new CategoryType();\n  }\n\n  ngOnInit() {\n    this.getParamenter();\n    this.fetchAllCategories();\n  }\n\n  getParamenter() {\n    this.categoryId = this.route.snapshot.params['categoryId'] || '';\n    this.typeId = this.route.snapshot.params['typeId'] || '';\n\n    if ((this.categoryId || this.categoryId == \"0\") && this.typeId) {\n      this.loadingService.enableLoading();\n      this.categoryService.fetchById(this.categoryId).subscribe((response: CategoryType[]) => {\n        this.categoryType = response.find(p => p.id == this.typeId);\n        this.loadingService.disableLoading();\n      });\n    }\n\n  }\n\n  fetchAllCategories() {\n    this.loadingService.enableLoading();\n    this.categoryService\n      .fetchAllCategories()\n      .subscribe((response: CategoryNew[]) => {\n        this.categories = response;\n        this.loadingService.disableLoading();\n      });\n  }\n\n  saveCategory() {\n    if (this.categoryType.id) {\n      this.categoryService.updateType(this.categoryType).subscribe((data) => {\n        window.localStorage.setItem(\"categoryId\", this.categoryType.categoryId);\n        this.router.navigate([\"/admin/categoryview\"])\n      });\n    }\n    else {\n      this.categoryService.createType(this.categoryType).subscribe((data) => {\n        window.localStorage.setItem(\"categoryId\", this.categoryType.categoryId);\n        this.router.navigate([\"/admin/categoryview\"])\n      });\n    }\n  }\n\n  moveBack() {\n    this.location.back();\n  }\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css\" />\n\n<div class=\"container\">\n  <div class=\"card bg-light\">\n    <article class=\"card-body mx-auto\" style=\" width: 100%;\">\n      <h1 style=\"text-align: center; text-transform: uppercase;\">{{product.id? \"Update Product\":\"Create Product\"}}</h1>\n      <form (ngSubmit)=\"saveProduct()\" #addProduct=\"ngForm\" class=\"needs-validation\">\n        <div class=\"form-group input-group\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">\n              <em class=\"fa\">Category *</em>\n            </span>\n          </div>\n          <select style=\"width: 100%; height: 40px;\" name=\"categories\" id=\"categories\" [(ngModel)]=\"product.categoryId\"\n            (change)=\"onChangeCategory($event.target.value, '')\" #categoryId=\"ngModel\" required>\n            <option value=\"\" disabled selected>Choose a category...</option>\n            <option *ngFor=\"let category of categories\" value=\"{{category.id}}\">{{category.name}}</option>\n          </select>\n          <br />\n          <div *ngIf=\"\n          categoryId.invalid && categoryId.touched && categoryId.dirty\n          \" class=\"alert alert-danger\">\n            Please choose\n          </div>\n        </div>\n\n        <div class=\"form-group input-group\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">\n              <em class=\"fa\">Type *</em>\n            </span>\n          </div>\n          <select style=\"width: 100%; height: 40px;\" name=\"types\" id=\"types\" [(ngModel)]=\"product.typeId\"\n            #typeId=\"ngModel\" required>\n            <option value=\"\" [hidden]=\"true\" disabled selected>Choose a category type...</option>\n            <option *ngFor=\"let item of categoryTypes\" value=\"{{item.id}}\">{{item.name}}</option>\n          </select>\n          <br />\n          <div *ngIf=\"\n          typeId.invalid && typeId.touched && typeId.dirty\n          \" class=\"alert alert-danger\">\n            Please choose\n          </div>\n        </div>\n\n        <div class=\"form-group input-group\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">\n              <em class=\"fa\">Product Name *</em>\n            </span>\n          </div>\n          <input required pattern=\".{2,}\" name=\"productName\" id=\"productName\" [(ngModel)]=\"product.name\"\n            #productName=\"ngModel\" class=\"form-control\" type=\"text\" />\n          <br />\n          <div *ngIf=\"\n              productName.invalid && productName.touched && productName.dirty\n            \" class=\"alert alert-danger\">\n            Name must be at least 3 characters long!\n          </div>\n        </div>\n        <!-- form-group// -->\n\n        <div class=\"form-group input-group\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">\n              <em class=\"fa\">Price *</em>\n            </span>\n          </div>\n          <input required pattern=\"0|[1-9][0-9]*\" name=\"productPrice\" id=\"productPrice\" [(ngModel)]=\"product.price\"\n            #productPrice=\"ngModel\" class=\"form-control\" />\n          <br />\n          <div *ngIf=\"\n            productPrice.invalid && productPrice.touched && productPrice.dirty\n            \" class=\"alert alert-danger\">\n            Input number\n          </div>\n        </div>\n\n        <!-- form-group// -->\n\n        <div class=\"form-group input-group\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">\n              <em class=\"fa\">Photo Url</em>\n            </span>\n          </div>\n          <input name=\"productPhotoUrl\" pattern=\"\" id=\"productPhotoUrl\" [(ngModel)]=\"product.photoUrl\"\n            #productPhotoUrl=\"ngModel\" class=\"form-control\" placeholder=\"Photo Url\" />\n          <br />\n          <div *ngIf=\"\n            productPhotoUrl.invalid && productPhotoUrl.touched && productPhotoUrl.dirty\n            \" class=\"alert alert-danger\">\n            Enter a valid\n          </div>\n        </div>\n        <!-- form-group// -->\n\n        <!-- form-group// -->\n\n        <div class=\"form-group input-group\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">\n              <em class=\"fa\">Description</em>\n            </span>\n          </div>\n          <textarea name=\"productDescription\" id=\"productDescription\" [(ngModel)]=\"product.description\"\n            #productDescription=\"ngModel\" style=\"width: 100%\" rows=\"2\"></textarea>\n        </div>\n        <!-- form-group// -->\n        <!-- form-group end.// -->\n        <!-- form-group// -->\n\n        <div class=\"form-group\">\n          <button type=\"submit\" [disabled]=\"!addProduct.valid\" class=\"btn btn-primary btn-block\">\n            Save\n          </button>\n        </div>\n        <div class=\"form-group\">\n          <button (click)=\"moveBack()\" type=\"button\" class=\"btn btn-second btn-block\">\n            Cancel\n          </button>\n        </div>\n        <!-- form-group// -->\n      </form>\n    </article>\n  </div>\n  <!-- card.// -->\n</div>\n<!--container end.//-->","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CategoryNew } from 'src/app/models/category-new';\nimport { CategoryType } from 'src/app/models/category-type';\nimport { ProductNew } from 'src/app/models/product-new';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { ProductService } from 'src/app/services/product.service';\nimport { LoadingService } from 'src/app/services/loading.service';\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.scss']\n})\nexport class AddProductComponent implements OnInit {\n\n  categories: CategoryNew[] = [];\n  categoryTypes: CategoryType[] = [];\n  categoryId: string;\n  product : ProductNew;\n\n  constructor(private service : ProductService, \n    private categoryService : CategoryService, \n    private router : Router,\n    private route : ActivatedRoute,\n    private location: Location,\n    private loadingService: LoadingService) {\n    this.product = new ProductNew();\n   }\n\n  ngOnInit(){\n    this.getParamenter();\n    this.fetchAllCategories();\n  }\n\n  getParamenter(){\n    var id = this.route.snapshot.params['id'] || '';\n\n    if(id){\n      this.loadingService.enableLoading();\n      this.service.fetchById(id).subscribe((response: ProductNew) => {\n        this.product = response;\n        this.loadingService.disableLoading();\n        this.onChangeCategory(this.product.categoryId, this.product.typeId);\n      });\n    }\n\n  }\n\n  fetchAllCategories() {\n    this.loadingService.enableLoading();\n    this.categoryService\n      .fetchAllCategories()\n      .subscribe((response: CategoryNew[]) => {\n        this.categories = response;\n        this.loadingService.disableLoading();\n      });\n  }\n\n  onChangeCategory(categoryId, typeId){\n    this.categoryId = categoryId;\n    if(this.categoryId || this.categoryId==\"0\")\n    {\n      this.fetchAllType(categoryId);\n    }\n    this.product.typeId=typeId;\n  }\n\n  fetchAllType(categoryId){\n    this.loadingService.enableLoading();    \n    if(this.categoryId || this.categoryId==\"0\"){\n      this.categoryService\n        .fetchById(categoryId)\n        .subscribe((response: CategoryType[]) => {\n          this.categoryTypes = response;\n          this.loadingService.disableLoading();\n        });\n    }\n  }\n\n  getSelectedOptionText(cId){\n    this.categoryId = cId;\n  }\n\n  saveProduct(){\n    if(this.product.id){\n      this.product.datetime = null;\n      this.service.updateProduct(this.product.id, this.product).subscribe(response => {\n        this.router.navigate(['admin/view']);\n      });\n\n    }else{\n      this.service.addProduct(this.product).subscribe(response => {\n        this.router.navigate(['admin/view']);\n      });\n    }\n  }\n\n  moveBack(){\n    this.location.back();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"allButFooter\">\n  <app-navigation></app-navigation>\n  <!-- <div class=\"backdrop\"></div> -->\n  <div class=\"backdrop\"></div>\n  <div class=\"content\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n\n<app-footer></app-footer>\n","<div class=\"root\">\n  <div class=\"content\">\n    <div class=\"my-card\">\n      <div class=\"row\">\n        <div class=\"col-6 front-img\" [ngStyle]=\"{\n            'background-image':\n              'url(' + categoryImageUrl + '), url(assets/images/invalid_url2.png)'\n          }\"></div>\n        <div class=\"col-6 section-product\">\n          <div class=\"p-5\">\n            <h2 class=\"product-title\">\n              <img class=\"back-img\" (click)=\"goBack()\" src=\"assets/images/back.svg\" alt=\"\" />\n              Edit Category #<span class=\"product-id\"> {{ categoryId }} </span>\n            </h2>\n            <form class=\"user\" [formGroup]=\"updateCategoryForm\" (ngSubmit)=\"submitForm()\">\n              <input hidden type=\"text\" formControlName=\"categoryId\" />\n              <!-- Category Name -->\n              <div class=\"form-group\">\n                <label for=\"categoryName\"> Category Name</label>\n                <input class=\"form-control form-control-user\" type=\"text\" id=\"categoryName\"\n                  formControlName=\"categoryName\" placeholder=\"Category Name\" [ngClass]=\"{\n                    'is-invalid':\n                      submitted && updateCategoryForm.get('categoryName').invalid\n                  }\" name=\"categoryName\" />\n                <div class=\"invalid-feedback\" *ngIf=\"submitted && updateCategoryForm.get('categoryName').invalid\">\n                  <div *ngIf=\"updateCategoryForm.get('categoryName').errors['required']\">\n                    * Required\n                  </div>\n                  <div *ngIf=\"\n                      updateCategoryForm.get('categoryName').errors['serverValidationError']\n                    \">\n                    {{\n                    updateCategoryForm.controls[\"categoryName\"].errors\n                    .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              <!-- Category Description -->\n              <div class=\"form-group\">\n                <label for=\"exampleInputcategoryDescription\"> Category Description</label>\n                <textarea class=\"form-control form-control-user\" formControlName=\"categoryDescription\"\n                  id=\"exampleInputcategoryDescription\" placeholder=\"Category Description\" name=\"categoryDescription\"\n                  [ngClass]=\"{\n                    'is-invalid':\n                      submitted &&\n                      updateCategoryForm.get('categoryDescription').invalid\n                  }\"></textarea>\n                <div class=\"invalid-feedback\"\n                  *ngIf=\"submitted && updateCategoryForm.get('categoryDescription').invalid\">\n                  <div *ngIf=\"updateCategoryForm.get('categoryDescription').errors['required']\">\n                    * Required\n                  </div>\n                  <div *ngIf=\"\n                      updateCategoryForm.get('categoryDescription').errors['serverValidationError']\n                    \">\n                    {{\n                    updateCategoryForm.controls[\"categoryDescription\"].errors\n                    .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              <!-- Category Icon -->\n              <div class=\"form-group\">\n                <label for=\"exampleInputcategoryImageUrl\"> Category Icon</label>\n                <textarea class=\"form-control form-control-user\" type=\"text\" formControlName=\"categoryImageUrl\"\n                  id=\"exampleInputcategoryImageUrl\" placeholder=\"Category Icon\"\n                  (change)=\"updateImage($event.target.value)\" name=\"categoryImageUrl\" [ngClass]=\"{\n                    'is-invalid': submitted && updateCategoryForm.get('categoryImageUrl').invalid\n                  }\"></textarea>\n                <div class=\"invalid-feedback\" *ngIf=\"submitted && updateCategoryForm.get('categoryImageUrl').invalid\">\n                  <div *ngIf=\"updateCategoryForm.get('categoryImageUrl').errors['required']\">\n                    * Required\n                  </div>\n                  <div *ngIf=\"\n                      updateCategoryForm.get('categoryImageUrl').errors['serverValidationError']\n                    \">\n                    {{\n                    updateCategoryForm.controls[\"categoryImageUrl\"].errors\n                    .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              <div *ngIf=\"message\" class=\"alert alert-success\" role=\"alert\">\n                {{message}}\n              </div>\n              <button class=\"primary-btn btn-block\" type=\"submit\">\n                <span *ngIf=\"loadingService.loading\" class=\"spinner-border spinner-border-sm\"></span>\n                Update Category\n              </button>\n              <button class=\"secondary-btn btn-block\" type=\"button\" (click)=\"resetToDefault()\">\n                Reset to default\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Category } from 'src/app/models/category.model';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { FormSubmitModalService } from 'src/app/services/form-submit-modal.service';\nimport { LoadingService } from 'src/app/services/loading.service';\n\n@Component({\n  selector: 'app-update-category',\n  templateUrl: './update-category.component.html',\n  styleUrls: ['./update-category.component.scss'],\n})\nexport class UpdateCategoryComponent implements OnInit {\n  categoryId;\n  submitted = false;\n  updateCategoryForm: FormGroup;\n  categories: Category[] = [];\n  category: Category;\n  categoryImageUrl = '';\n  message;\n\n  constructor(\n    private route: ActivatedRoute,\n    public loadingService: LoadingService,\n    private categoryService: CategoryService,\n    private location: Location,\n    private formModal: FormSubmitModalService,\n  ) {}\n\n  ngOnInit(): void {\n    this.categoryId = this.route.snapshot.params['categoryId'] || '';\n    this.initForm();\n    this.populateData();\n  }\n\n  initForm() {\n    this.updateCategoryForm = new FormGroup({\n      categoryId: new FormControl(this.categoryId),\n      categoryName: new FormControl('', [Validators.required]),\n      categoryDescription: new FormControl('', [Validators.required]),\n      categoryImageUrl: new FormControl('', [Validators.required]),\n    });\n  }\n  \n  populateData() {\n    this.categoryService\n      .fetchById(this.categoryId)\n      .subscribe((res: Category) => {\n        this.category = res;\n        this.categoryImageUrl = res.categoryImageUrl; // Apply image fetched from server\n        this.populateFormFields(this.category);\n      });\n  }\n\n  populateFormFields(category) {\n    this.updateCategoryForm.patchValue({\n      categoryId: category.categoryId,\n      categoryName: category?.categoryName,\n      categoryDescription: category?.categoryDescription,\n      categoryImageUrl: category?.categoryImageUrl,\n    });\n  }\n\n  submitForm() {\n    this.submitted = true;\n    if (this.updateCategoryForm.valid)\n      this.submitData(this.updateCategoryForm.value);\n  }\n  submitData(formData: any) {\n    this.loadingService.enableLoading();\n    \n  }\n\n  updateImage(image) {\n    this.categoryImageUrl = image;\n  }\n\n  resetToDefault() {\n    this.populateFormFields(this.category);\n    this.categoryImageUrl = this.category.categoryImageUrl;\n  }\n\n  goBack() {\n    this.location.back();\n  }\n}\n","<div class=\"root\">\n  <div class=\"content\">\n    <div class=\"my-card\">\n      <div class=\"row\">\n        <div class=\"col-12 section-product\">\n          <div class=\"p-5\">\n            <h2 class=\"product-title\">\n              <img class=\"back-img\" (click)=\"goBack()\" src=\"assets/images/back.svg\" alt=\"\" />\n              <span *ngIf=\"newsId\"> UPDATE NEWS #<span class=\"product-id\"> {{ newsId }} </span></span>\n              <span *ngIf=\"!newsId\"> CREATE NEWS</span>\n            </h2>\n            <form class=\"user\" [formGroup]=\"updateNewsForm\" (ngSubmit)=\"submitForm()\">\n              <input hidden type=\"text\" formControlName=\"id\" />\n\n              <div class=\"form-group\">\n                <label for=\"newsTitle\"> Title</label>\n                <input class=\"form-control form-control-user\" type=\"text\" id=\"title\" formControlName=\"title\"\n                  placeholder=\"\" [ngClass]=\"{\n                    'is-invalid': submitted && updateNewsForm.get('title').invalid }\" name=\"title\" />\n                <div class=\"invalid-feedback\" *ngIf=\"submitted && updateNewsForm.get('title').invalid\">\n                  <div *ngIf=\"updateNewsForm.get('title').errors['required']\">\n                    * Required\n                  </div>\n                  <div *ngIf=\"updateNewsForm.get('title').errors['serverValidationError']\">\n                    {{ updateNewsForm.controls[\"title\"].errors.serverValidationError }}\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"newsTitle\"> Type &nbsp;</label>\n                <select class=\"form-select\" formControlName=\"newsType\" [ngClass]=\"{\n                  'is-invalid': submitted && updateNewsForm.get('newsType').invalid }\" name=\"newsType\">\n                  <option value=\"\" disabled selected>Choose type</option>\n                  <option value=0>Tin tức</option>\n                  <option value=1>Hoạt động cộng đồng</option>\n                </select>\n                <div class=\"invalid-feedback\" *ngIf=\"submitted && updateNewsForm.get('newsType').invalid\">\n                  <div *ngIf=\"updateNewsForm.get('newsType').errors['required']\">\n                    * Required\n                  </div>\n                  <div *ngIf=\"updateNewsForm.get('newsType').errors['serverValidationError']\">\n                    {{ updateNewsForm.controls[\"newsType\"].errors.serverValidationError }}\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"imagesUrl\">Image Url</label>\n                <input class=\"form-control form-control-user\" type=\"text\" id=\"imagesUrl\" formControlName=\"imagesUrl\"\n                  placeholder=\"\" [ngClass]=\"{\n                    'is-invalid': submitted && updateNewsForm.get('imagesUrl').invalid }\" name=\"imagesUrl\" />\n                <div class=\"invalid-feedback\" *ngIf=\"submitted && updateNewsForm.get('imagesUrl').invalid\">\n                  <div *ngIf=\"updateNewsForm.get('imagesUrl').errors['required']\">\n                    * Required\n                  </div>\n                  <div *ngIf=\"updateNewsForm.get('imagesUrl').errors['serverValidationError']\">\n                    {{ updateNewsForm.controls[\"imagesUrl\"].errors.serverValidationError }}\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"exampleInputNewsContent\">Content</label>\n                <div class=\"NgxEditor__Wrapper\">\n                  <ngx-editor-menu [editor]=\"editor\"> </ngx-editor-menu>\n                  <ngx-editor [editor]=\"editor\" [disabled]=\"false\" [placeholder]=\"'Type here...'\"\n                    formControlName=\"content\" minHeight=\"450px\"></ngx-editor>\n                </div>\n                <div class=\"invalid-feedback\" *ngIf=\"submitted && updateNewsForm.get('content').invalid\">\n                  <div *ngIf=\"updateNewsForm.get('content').errors['required']\">\n                    * Required\n                  </div>\n                  <div *ngIf=\"updateNewsForm.get('content').errors['serverValidationError']\">\n                    {{ updateNewsForm.controls[\"content\"].errors.serverValidationError }}\n                  </div>\n                </div>\n              </div>\n\n              <div *ngIf=\"message\" class=\"alert alert-success\" role=\"alert\">\n                {{message}}\n              </div>\n              <button class=\"primary-btn btn-block\" type=\"submit\">\n                <span *ngIf=\"loadingService.loading\" class=\"spinner-border spinner-border-sm\"></span>\n                Save\n              </button>\n              <button class=\"secondary-btn btn-block\" type=\"button\" (click)=\"resetToDefault()\" *ngIf=\"newsId\">\n                Reset to default\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Location } from '@angular/common';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { News } from 'src/app/models/news';\nimport { NewsService } from 'src/app/services/news.service';\nimport { FormSubmitModalService } from 'src/app/services/form-submit-modal.service';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { Editor } from 'ngx-editor';\n\n@Component({\n  selector: 'app-update-news',\n  templateUrl: './update-news.component.html',\n  styleUrls: ['./update-news.component.scss'],\n})\nexport class UpdateNewsComponent implements OnInit, OnDestroy {\n  newsId;\n  submitted = false;\n  updateNewsForm: FormGroup;\n  news: News;\n  newsImageUrl = '';\n  message;\n  editor: Editor;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    public loadingService: LoadingService,\n    private newsService: NewsService,\n    private location: Location,\n    private formModal: FormSubmitModalService,\n  ) { }\n\n  ngOnInit(): void {\n    this.editor = new Editor();\n    this.newsId = this.route.snapshot.params['id'] || '';\n    this.initForm();\n    if (this.newsId && this.newsId != \"\" && this.newsId != null) {\n      this.populateData();\n    } else {\n      this.news = new News();\n      this.populateFormFields(this.news);\n    }\n  }\n\n  initForm() {\n    this.updateNewsForm = new FormGroup({\n      id: new FormControl(this.newsId),\n      title: new FormControl('', [Validators.required]),\n      newsType: new FormControl('', [Validators.required]),\n      content: new FormControl('', [Validators.required]),\n      imagesUrl: new FormControl('', []),\n    });\n  }\n\n  populateData() {\n    this.newsService\n      .fetchById(this.newsId)\n      .subscribe((res: News) => {\n        this.news = res;\n        this.populateFormFields(this.news);\n      });\n  }\n\n  populateFormFields(news: News) {\n    var imagesUrl = \"\";\n    if (news?.imagesUrl && news?.imagesUrl.length > 0) {\n      imagesUrl = news?.imagesUrl[0];\n    }\n\n    var content = \"\";\n    if (news?.content) {\n      content = news?.content;\n    }\n\n    this.updateNewsForm.patchValue({\n      id: news.id,\n      title: news?.title,\n      newsType: news?.newsType,\n      content: content,\n      imagesUrl: imagesUrl,\n    });\n  }\n\n  submitForm() {\n    this.submitted = true;\n    if (this.updateNewsForm.valid)\n      this.submitData(this.updateNewsForm.value);\n  }\n\n  submitData(formData: any) {\n    this.loadingService.enableLoading();\n\n    var imagesUrl = formData.imagesUrl;\n    formData.imagesUrl = this.news.imagesUrl;\n    if (!formData.imagesUrl || formData.imagesUrl.length == 0) {\n      formData.imagesUrl = [];\n      formData.imagesUrl.push(imagesUrl);\n    } else {\n      formData.imagesUrl[0] = imagesUrl;\n    }\n\n    if (this.newsId && this.newsId != \"\" && this.newsId != null) {\n      this.newsService.update(formData).subscribe(res => {\n        this.router.navigate([\"/admin/newsview\"])\n      })\n    } else {\n      this.newsService.create(formData).subscribe(res => {\n        this.router.navigate([\"/admin/newsview\"])\n      })\n    }\n  }\n\n  updateImage(image) {\n    // this.categoryImageUrl = image;\n  }\n\n  resetToDefault() {\n    this.populateFormFields(this.news);\n    //this.categoryImageUrl = this.category.categoryImageUrl;\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  // make sure to destory the editor\n  ngOnDestroy(): void {\n    this.editor.destroy();\n  }\n}\n","<div class=\"root\">\n  <div class=\"content\">\n    <div class=\"my-card\">\n      <div class=\"row\">\n        <div class=\"col-6 section-product\">\n          <div class=\"p-5\">\n            <h2 class=\"product-title\">\n              <img class=\"back-img\" (click)=\"goBack()\" src=\"assets/images/back.svg\" alt=\"\" />\n              Edit Product #<span class=\"product-id\"> {{ productId }} </span>\n            </h2>\n            <form class=\"user\" [formGroup]=\"updateProductForm\" (ngSubmit)=\"submitForm(productId)\">\n              <input hidden type=\"text\" formControlName=\"productId\" />\n              <!-- Product Name -->\n              <div class=\"form-group\">\n                <label for=\"productName\"> Product Name</label>\n                <input class=\"form-control form-control-user\" type=\"text\" id=\"productName\" formControlName=\"productName\"\n                  placeholder=\"Product Name\" [ngClass]=\"{\n                    'is-invalid':\n                      submitted && updateProductForm.get('productName').invalid\n                  }\" name=\"productName\" />\n                <div class=\"invalid-feedback\" *ngIf=\"submitted && updateProductForm.get('productName').invalid\">\n                  <div *ngIf=\"updateProductForm.get('productName').errors['required']\">\n                    * Required\n                  </div>\n                  <div *ngIf=\"\n                      updateProductForm.get('productName').errors['serverValidationError']\n                    \">\n                    {{\n                    updateProductForm.controls[\"productName\"].errors\n                    .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              <!-- Product Price -->\n              <div class=\"form-group\">\n                <label for=\"exampleInputproductPrice\"> Product Price</label>\n                <input class=\"form-control form-control-user\" formControlName=\"productPrice\" type=\"number\"\n                  id=\"exampleInputproductPrice\" placeholder=\"Product Price\" name=\"productPrice\" [ngClass]=\"{\n                    'is-invalid': submitted && updateProductForm.get('productPrice').invalid\n                  }\" />\n                <div class=\"invalid-feedback\" *ngIf=\"submitted && updateProductForm.get('productPrice').invalid\">\n                  <div *ngIf=\"updateProductForm.get('productPrice').errors['required']\">\n                    * Required\n                  </div>\n                  <div *ngIf=\"\n                      updateProductForm.get('productPrice').errors['serverValidationError']\n                    \">\n                    {{\n                    updateProductForm.controls[\"productPrice\"].errors\n                    .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              <!-- Discount Percent -->\n              <div class=\"form-group\">\n                <label for=\"exampleInputdiscountPercent\"> Discount Percent</label>\n                <input class=\"form-control form-control-user\" formControlName=\"discountPercent\" type=\"number\"\n                  id=\"exampleInputdiscountPercent\" placeholder=\"Discount Percent\" name=\"discountPercent\" [ngClass]=\"{\n                    'is-invalid': submitted && updateProductForm.get('discountPercent').invalid\n                  }\" />\n                <div class=\"invalid-feedback\" *ngIf=\"submitted && updateProductForm.get('discountPercent').invalid\">\n                  <div *ngIf=\"updateProductForm.get('discountPercent').errors['required']\">\n                    * Required\n                  </div>\n                  <div *ngIf=\"\n                      updateProductForm.get('discountPercent').errors['serverValidationError']\n                    \">\n                    {{\n                    updateProductForm.controls[\"discountPercent\"].errors\n                    .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              <!-- Product Stock -->\n              <div class=\"form-group\">\n                <label for=\"exampleInputproductStock\"> Product Description</label>\n                <input class=\"form-control form-control-user\" type=\"productStock\" formControlName=\"productStock\"\n                  type=\"number\" id=\"exampleInputproductStock\" placeholder=\"Product Stock\" name=\"productStock\" [ngClass]=\"{\n                    'is-invalid': submitted && updateProductForm.get('productStock').invalid\n                  }\" />\n                <div class=\"invalid-feedback\" *ngIf=\"submitted && updateProductForm.get('productStock').invalid\">\n                  <div *ngIf=\"updateProductForm.get('productStock').errors['required']\">\n                    * Required\n                  </div>\n                  <div *ngIf=\"\n                      updateProductForm.get('productStock').errors['serverValidationError']\n                    \">\n                    {{\n                    updateProductForm.controls[\"productStock\"].errors\n                    .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              <!-- Product Description -->\n              <div class=\"form-group\">\n                <label for=\"exampleInputproductDescription\"> Product Description</label>\n                <textarea class=\"form-control form-control-user\" formControlName=\"productDescription\"\n                  id=\"exampleInputproductDescription\" placeholder=\"Product Description\" name=\"productDescription\"\n                  [ngClass]=\"{\n                    'is-invalid':\n                      submitted &&\n                      updateProductForm.get('productDescription').invalid\n                  }\"></textarea>\n                <div class=\"invalid-feedback\" *ngIf=\"submitted && updateProductForm.get('productDescription').invalid\">\n                  <div *ngIf=\"updateProductForm.get('productDescription').errors['required']\">\n                    * Required\n                  </div>\n                  <div *ngIf=\"\n                      updateProductForm.get('productDescription').errors['serverValidationError']\n                    \">\n                    {{\n                    updateProductForm.controls[\"productDescription\"].errors\n                    .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              <!-- Product Icon -->\n              <div class=\"form-group\">\n                <label for=\"exampleInputproductIcon\"> Product Icon</label>\n                <textarea class=\"form-control form-control-user\" type=\"text\" formControlName=\"productIcon\"\n                  id=\"exampleInputproductIcon\" placeholder=\"Product Icon\" (change)=\"updateImage($event.target.value)\"\n                  name=\"productIcon\" [ngClass]=\"{\n                    'is-invalid': submitted && updateProductForm.get('productIcon').invalid\n                  }\"></textarea>\n                <div class=\"invalid-feedback\" *ngIf=\"submitted && updateProductForm.get('productIcon').invalid\">\n                  <div *ngIf=\"updateProductForm.get('productIcon').errors['required']\">\n                    * Required\n                  </div>\n                  <div *ngIf=\"\n                      updateProductForm.get('productIcon').errors['serverValidationError']\n                    \">\n                    {{\n                    updateProductForm.controls[\"productIcon\"].errors\n                    .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              <!-- Product Status -->\n              <div class=\"form-group\">\n                <div>\n                  <label>Product Status</label>\n                  <div *ngFor=\"let status of statuses\" class=\"custom-control custom-radio\">\n                    <input [ngClass]=\"{'is-invalid':submitted && updateProductForm.get('productStatus').invalid}\"\n                      [value]=\"status\" class=\"custom-control-input\" formControlName=\"productStatus\" [id]=\"status\"\n                      type=\"radio\" />\n                    <label class=\"custom-control-label\" for=\"{{ status }}\">{{\n                      status\n                      }}</label>\n                  </div>\n                  <div class=\"invalid-feedback\" *ngIf=\"\n                      submitted &&\n                      updateProductForm.get('productStatus').invalid\n                    \">\n                    <div *ngIf=\"\n                        updateProductForm.get('productStatus').errors[\n                          'required'\n                        ]\n                      \">\n                      * Required\n                    </div>\n                    <div *ngIf=\"\n                        updateProductForm.get('productStatus').errors[\n                          'serverValidationError'\n                        ]\n                      \">\n                      {{\n                      updateProductForm.controls[\"productStatus\"].errors\n                      .serverValidationError\n                      }}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <!-- Product Category -->\n              <div class=\"form-group\">\n                <label for=\"supplierId\"><strong>Category</strong><br /></label><select [ngClass]=\"{\n                    'is-invalid':\n                      submitted && updateProductForm.get('categoryId').invalid\n                  }\" class=\"form-control\" formControlName=\"categoryId\">\n                  <option value=\"\" disabled=\"true\" [selected]=\"true\">\n                    Select a Category\n                  </option>\n                  <option *ngFor=\"let item of categories\" [value]=\"item.categoryId\">\n                    {{ item.categoryName }}\n                  </option>\n                </select>\n                <div class=\"invalid-feedback\" *ngIf=\"submitted && updateProductForm.get('categoryId').invalid\">\n                  <div *ngIf=\"updateProductForm.get('categoryId').errors['required']\">* Required</div>\n                  <div *ngIf=\"updateProductForm.get('categoryId').errors['serverValidationError']\">\n                    {{updateProductForm.controls['categoryId'].errors.serverValidationError }}\n                  </div>\n                </div>\n              </div>\n              <div *ngIf=\"message\" class=\"alert alert-success\" role=\"alert\">\n                {{message}}\n              </div>\n              <button class=\"primary-btn btn-block\" type=\"submit\">\n                <span *ngIf=\"loadingService.loading\" class=\"spinner-border spinner-border-sm\"></span>\n                Update Product\n              </button>\n              <button class=\"secondary-btn btn-block\" type=\"button\" (click)=\"resetToDefault()\">\n                Reset to default\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Category } from 'src/app/models/category.model';\nimport { Product } from 'src/app/models/product.model';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { FormSubmitModalService } from 'src/app/services/form-submit-modal.service';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { ProductService } from 'src/app/services/product.service';\n\n@Component({\n  selector: 'app-update-product',\n  templateUrl: './update-product.component.html',\n  styleUrls: ['./update-product.component.scss'],\n})\nexport class UpdateProductComponent implements OnInit {\n  productId;\n  submitted = false;\n  updateProductForm: FormGroup;\n  categories: Category[] = [];\n  statuses = ['ENABLED', 'DISABLED'];\n  product: Product;\n  productIcon = '';\n  message;\n\n  constructor(\n    private route: ActivatedRoute,\n    public loadingService: LoadingService,\n    private productService: ProductService,\n    private categoryService: CategoryService,\n    private location: Location,\n    private router: Router,\n    private formModal: FormSubmitModalService,\n  ) {}\n\n  ngOnInit(): void {\n    this.productId = this.route.snapshot.params['productId'] || '';\n    this.initForm();\n    this.populateData();\n  }\n  initForm() {\n    this.updateProductForm = new FormGroup({\n      productId: new FormControl(this.productId),\n      productName: new FormControl('', [Validators.required]),\n      productPrice: new FormControl('', [Validators.required]),\n      discountPercent: new FormControl('', [Validators.required]),\n      productStock: new FormControl('', [Validators.required]),\n      productDescription: new FormControl('', [Validators.required]),\n      productIcon: new FormControl('', [Validators.required]),\n      productStatus: new FormControl('', [Validators.required]),\n      categoryId: new FormControl('', [Validators.required]),\n    });\n  }\n  populateData() {\n    this.categoryService.fetchAllCategories().subscribe((res: Category[]) => {\n      this.categories = res;\n    }).closed;\n    this.productService.fetchById(this.productId).subscribe((res: Product) => {\n      this.product = res;\n      this.productIcon = res.productIcon; // Apply image fetched from server\n      this.populateFormFields(this.product);\n    }).closed;\n  }\n\n  populateFormFields(product) {\n    this.updateProductForm.patchValue({\n      productId: product.productId,\n      productName: product?.productName,\n      productPrice: product?.productPrice,\n      discountPercent: product?.discountPercent,\n      productStock: product?.productStock,\n      productDescription: product?.productDescription,\n      productIcon: product?.productIcon,\n      productStatus: product?.productStatus,\n      categoryId: product?.categoryId,\n    });\n  }\n\n  submitForm(productId) {\n    this.submitted = true;\n    if (this.updateProductForm.valid)\n      this.submitData(productId, this.updateProductForm.value);\n  }\n\n  submitData(productId, formData: any) {\n    this.loadingService.enableLoading();\n    this.productService.updateProduct(productId, formData).subscribe(\n      (response) => {\n        this.loadingService.disableLoading();\n        this.formModal.open('Successfully updated product with ID ' + response['productId'], '/admin/view')\n        // this.message =\n        // 'Successfully updated product with ID ' + response['productId'];\n        // setTimeout(() => {\n        //   this.router.navigateByUrl('/admin/view');\n        // }, 3000);\n      },\n      (error) => {\n        this.loadingService.disableLoading();\n        if (error?.error?.message === 'FieldException')\n          error.error.errors.forEach((element) =>\n            this.updateProductForm.controls[element.field]?.setErrors({\n              serverValidationError: element.message,\n            })\n          );\n        else throw new Error(error);\n      }\n    );\n  }\n\n  updateImage(image) {\n    console.log('triggered');\n\n    this.productIcon = image;\n  }\n\n  resetToDefault() {\n    this.populateFormFields(this.product);\n    this.productIcon = this.product.productIcon;\n  }\n\n  goBack() {\n    this.location.back();\n  }\n}\n","<div class=\"parent px-1 px-md-4 py-4 mx-auto\">\n  <div class=\"card\">\n    <div class=\"row d-flex justify-content-between px-3 top\">\n      <div class=\"logo-container\">\n        <h1 class=\"title-main\">Types of Category</h1>\n        <hr />\n      </div>\n      <span stype=\"font-size: 25px; padding-bottom: 15px;\">Display all types in the category<br /></span>\n      <select style=\"width: 100%; height: 40px;\" name=\"categories\" id=\"categories\" ([ngModel])=\"categoryId\"\n        (change)=\"onChangeCategory($event.target.value)\">\n        <option value=\"\" disabled=\"true\" hidden=\"true\" selected>Choose a category...</option>\n        <option *ngFor=\"let category of categories\" value=\"{{category.id}}\" [selected]=\"category.id == categoryId\">\n          {{category.name}}</option>\n      </select>\n      <div class=\"section-search\">\n        <input type=\"text\" class=\"search-hover\" name=\"\" (input)=\"doFilter($event.target.value)\"\n          placeholder=\"Search...\" />\n        <img class=\"category-add\" src=\"assets/images/add_circle_filled.svg\" alt=\"Type Add\"\n          [routerLink]=\"['/admin/categoryadd']\">\n      </div>\n      <div class=\"section-table\">\n        <table mat-table [dataSource]=\"dataSource\" matSort>\n          <ng-container matColumnDef=\"typeName\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"type-name\">\n              {{ element.name }}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"typeDescription\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Description</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"type-description\">\n              {{ element.description }}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Actions</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"category-edit\">\n              <img (click)=\"onDelete(element)\" src=\"assets/images/delete.svg\" alt=\"\" />\n              <span style=\"width: 20px; display: inline-block;\"></span>\n              <img [routerLink]=\"['/admin/categoryedit', element.categoryId, element.id]\" src=\"assets/images/edit.svg\"\n                alt=\"\" />\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        </table>\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons [pageSize]=\"10\"></mat-paginator>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { CategoryNew } from 'src/app/models/category-new';\nimport { CategoryType } from 'src/app/models/category-type';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { LoadingService } from 'src/app/services/loading.service';\n\n@Component({\n  selector: 'app-view-categories',\n  templateUrl: './view-categories.component.html',\n  styleUrls: ['./view-categories.component.scss'],\n})\nexport class ViewCategoriesComponent implements OnInit {\n  categories: CategoryNew[] = []\n  dataSource = new MatTableDataSource<CategoryType>();\n  categoryId: string = \"\";\n\n  categorySubscription;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  // Specify columns tht should be rendered, must match names of matColumnDef\n  // ID is not beign displayed as its not present here\n  displayedColumns: string[] = [\n    'typeName',\n    'typeDescription',\n    'edit',\n  ];\n\n  constructor(\n    private categoryService: CategoryService,\n    public loadingService: LoadingService\n  ) { }\n\n  ngOnInit(): void {\n    this.fetchAllCategories();\n    this.fetchAllTypes();\n    this.categoryId = window.localStorage.getItem(\"categoryId\")\n    this.onChangeCategory(this.categoryId);\n    window.localStorage.removeItem(\"categoryId\");\n  }\n\n  fetchAllCategories() {\n    this.loadingService.enableLoading();\n    this.categorySubscription = this.categoryService\n      .fetchAllCategories()\n      .subscribe((response: CategoryNew[]) => {\n        this.categories = response;\n        this.loadingService.disableLoading();\n      });\n  }\n\n  fetchAllTypes() {\n    this.loadingService.enableLoading();\n    this.categorySubscription = this.categoryService\n      .fetchAllTypes()\n      .subscribe((response: CategoryType[]) => {\n        this.dataSource.data = response;\n        this.loadingService.disableLoading();\n      });\n  }\n\n  onChangeCategory(categoryId) {\n    if (categoryId || categoryId == \"0\") {\n      this.fetchTypesByCategory(categoryId);\n    }\n    this.categoryId = categoryId;\n  }\n\n  fetchTypesByCategory(categoryId) {\n    this.loadingService.enableLoading();\n    this.categorySubscription = this.categoryService\n      .fetchById(categoryId)\n      .subscribe((response: CategoryType[]) => {\n        this.dataSource.data = response;\n        this.loadingService.disableLoading();\n      });\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n  doFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  ngOnDestroy(): void {\n    if (this.categorySubscription) this.categorySubscription.unsubscribe();\n  }\n\n  onDelete(categoryType: CategoryType) {\n    if (confirm(\"Do you want to delete type: \" + categoryType.name + \" ? Remember it will delete all products belong to.\")) {\n      this.categoryService\n        .deleteType(categoryType.id)\n        .subscribe((response) => {\n          this.fetchTypesByCategory(this.categoryId);\n          this.loadingService.disableLoading();\n        });\n    }\n  }\n\n}\n","<div class=\"parent px-1 px-md-4 py-4 mx-auto\">\n  <div class=\"card\">\n    <div class=\"row d-flex justify-content-between px-3 top\">\n      <div class=\"logo-container\">\n        <h1 class=\"title-main\">News</h1>\n        <hr />\n      </div>\n      <div class=\"section-search\">\n        <input type=\"text\" class=\"search-hover\" name=\"\" (input)=\"doFilter($event.target.value)\"\n          placeholder=\"Search...\" />\n        <img class=\"category-add\" src=\"assets/images/add_circle_filled.svg\" alt=\"Add\" [routerLink]=\"['/admin/newsadd']\">\n      </div>\n      <div class=\"section-table\">\n        <table mat-table [dataSource]=\"dataSource\" matSort>\n          <ng-container matColumnDef=\"title\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Title</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"category-name\">\n              {{ element.title }}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"newsType\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Type</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"category-name\">\n              {{ element.newsType == 1 ? 'Hoạt động cộng đồng' : 'Tin tức' }}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Actions</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"category-edit\">\n              <img (click)=\"onDelete(element)\" src=\"assets/images/delete.svg\" alt=\"\" />\n              <span style=\"width: 20px; display: inline-block;\"></span>\n              <img [routerLink]=\"['/admin/newsedit', element.id]\" src=\"assets/images/edit.svg\" alt=\"\" />\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        </table>\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons [pageSize]=\"10\"></mat-paginator>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { News } from 'src/app/models/news';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { NewsService } from 'src/app/services/news.service';\n\n@Component({\n  selector: 'app-view-news',\n  templateUrl: './view-news.component.html',\n  styleUrls: ['./view-news.component.scss'],\n})\nexport class ViewNewsComponent implements OnInit {\n  dataSource = new MatTableDataSource<News>();\n  newsSubscription;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  // Specify columns tht should be rendered, must match names of matColumnDef\n  // ID is not beign displayed as its not present here\n  displayedColumns: string[] = [\n    'title',\n    'newsType',\n    'edit',\n  ];\n\n  constructor(\n    private newsService: NewsService,\n    public loadingService: LoadingService\n  ) {}\n\n  ngOnInit(): void {\n    this.fetchAllNews();\n  }\n  fetchAllNews() {\n    this.loadingService.enableLoading();\n    this.newsSubscription = this.newsService\n      .fetchAll()\n      .subscribe((response: any) => {\n        this.dataSource.data = <News[]> response.content;\n        this.loadingService.disableLoading();\n      });\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n  doFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  ngOnDestroy(): void {\n    if (this.newsSubscription) this.newsSubscription.unsubscribe();\n  }\n\n  onDelete(news: News){\n    if(confirm(\"Do you want to delete news: \"+ news.title +\" ?\")){\n      this.newsService\n      .delete(news.id)\n      .subscribe((response) => {\n        this.fetchAllNews();\n        this.loadingService.disableLoading();\n      });\n    }\n  }\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css\">\n<div class=\"parent px-1 px-md-4 py-4 mx-auto\">\n    <div class=\"card\">\n        <div class=\"row d-flex justify-content-between px-3 top\">\n            <div class=\"logo-container\">\n                <h1 class=\"title-main\">Products</h1>\n                <hr />\n            </div>\n            <div style=\"display: flex;padding: 20px; width: 100%;\">\n                <div style=\"width: 50%;padding-right: 5px;\">\n                    <select style=\"width: 100%; height: 40px;\" name=\"categories\" id=\"categories\"\n                        (change)=\"onChangeCategory($event.target.value)\">\n                        <option value=\"\" selected>All Categories</option>\n                        <option *ngFor=\"let category of categories\" value=\"{{category.id}}\">{{category.name}}</option>\n                    </select>\n                </div>\n                <div style=\"width: 50%;padding-left: 5px;\">\n                    <select style=\"width: 100%; height: 40px;\" name=\"categoryTypes\" id=\"categoryTypes\"\n                        (change)=\"onChangeCategoryType($event.target.value)\">\n                        <option value=\"\" selected>All Category Types</option>\n                        <option *ngFor=\"let item of categoryTypes\" value=\"{{item.id}}\">{{item.name}}</option>\n                    </select>\n                </div>\n            </div>\n\n            <div class=\"section-search\">\n                <input type=\"text\" class=\"search-hover\" name=\"\" (input)=\"doFilter($event.target.value)\"\n                    placeholder=\"Search...\" />\n                <img class=\"category-add\" src=\"assets/images/add_circle_filled.svg\" alt=\"Add Product\" title=\"Add Product\"\n                    [routerLink]=\"['/admin/add']\">\n                <a class=\"category-add\" (click)=\"exportExcel()\" title=\"Export Excel\">\n                    <mat-icon> cloud_download</mat-icon>\n                </a>\n            </div>\n            <div class=\"section-table\">\n                <table mat-table [dataSource]=\"dataSource\" matSort>\n                    <ng-container matColumnDef=\"name\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n                        <td mat-cell *matCellDef=\"let element\">\n                            {{ element.name }}\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"price\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Price</th>\n                        <td mat-cell *matCellDef=\"let element\">\n                            {{ numberWithCommas(element.price) }}\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"categoryName\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Category Name</th>\n                        <td mat-cell *matCellDef=\"let element\">\n                            {{ getCategoryName(element.categoryId) }}\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"description\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Description</th>\n                        <td mat-cell *matCellDef=\"let element\">\n                            {{ element.description | slice:0:60 }}\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"edit\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Actions</th>\n                        <td mat-cell *matCellDef=\"let element\" class=\"category-edit\">\n                            <img (click)=\"onDelete(element)\" src=\"assets/images/delete.svg\" alt=\"\" />\n                            <span style=\"width: 20px; display: inline-block;\"></span>\n                            <img [routerLink]=\"['/admin/product', element.id]\" src=\"assets/images/edit.svg\" alt=\"\" />\n                        </td>\n                    </ng-container>\n\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n                </table>\n                <mat-paginator [pageSizeOptions]=\"[10, 20, 30, 50, 100]\" showFirstLastButtons [pageSize]=\"20\">\n                </mat-paginator>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ProductNew } from 'src/app/models/product-new';\nimport { CategoryNew } from 'src/app/models/category-new';\nimport { CategoryType } from 'src/app/models/category-type';\nimport { ProductService } from 'src/app/services/product.service';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport * as XLSX from 'xlsx';\n\n@Component({\n  selector: 'app-view-product',\n  templateUrl: './view-product.component.html',\n  styleUrls: ['./view-product.component.scss'],\n})\nexport class ViewProductComponent implements OnInit {\n  products: ProductNew[] = [];\n  categories: CategoryNew[] = [];\n  categoryTypes: CategoryType[] = [];\n  categoryId: string;\n  categoryTypeId: string;\n  pageIndex = 0;\n  pageSize = 10;\n  fileName = 'ProductList.xlsx';\n\n  dataSource = new MatTableDataSource<ProductNew>();\n\n  productSubscription;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  // Specify columns tht should be rendered, must match names of matColumnDef\n  // ID is not beign displayed as its not present here\n  displayedColumns: string[] = [\n    'name',\n    'price',\n    'description',\n    'categoryName',\n    'edit'\n  ];\n\n  constructor(private service: ProductService,\n    private categoryService: CategoryService,\n    private router: Router,\n    public loadingService: LoadingService) { }\n\n  ngOnInit(): void {\n    this.getCategories();\n    this.fetchAllProducts();\n  }\n\n  fetchAllCategories() {\n    this.loadingService.enableLoading();\n    this.categoryService\n      .fetchAllCategories()\n      .subscribe((response: CategoryNew[]) => {\n        this.categories = response;\n        this.loadingService.disableLoading();\n      });\n  }\n\n  onChangeCategory(categoryId) {\n    this.categoryId = categoryId;\n    if (this.categoryId || this.categoryId == \"0\") {\n      this.fetchAllType(categoryId);\n    }\n    this.categoryTypeId = \"\";\n    this.fetchAllProducts();\n  }\n\n  onChangeCategoryType(categoryTypeId) {\n    this.categoryTypeId = categoryTypeId;\n    this.fetchAllProducts();\n  }\n\n  fetchAllType(categoryId) {\n    this.loadingService.enableLoading();\n    if (this.categoryId || this.categoryId == \"0\") {\n      this.categoryService\n        .fetchById(categoryId)\n        .subscribe((response: CategoryType[]) => {\n          this.categoryTypes = response;\n          this.loadingService.disableLoading();\n        });\n    }\n  }\n\n  fetchAllProducts() {\n    const pageOption = {\n      size: 9999,\n      page: this.pageIndex\n    }\n    if (this.categoryTypeId) {\n      this.productSubscription = this.service.findByCategoryType(this.categoryTypeId, pageOption).subscribe((data) => {\n        this.products = <ProductNew[]>data.content;\n        this.dataSource.data = this.products;\n      });\n    } else if (this.categoryId) {\n      this.productSubscription = this.service.findByCategoryId(this.categoryId, pageOption).subscribe((data) => {\n        this.products = <ProductNew[]>data.content;\n        this.dataSource.data = this.products;\n      });\n    } else {\n      this.productSubscription = this.service.fetchAllProducts(pageOption).subscribe((data) => {\n        this.products = <ProductNew[]>data.content;\n        this.dataSource.data = this.products;\n      });\n    }\n  }\n\n  getCategories() {\n    this.categoryService.fetchAllCategories().subscribe((res) => {\n      this.categories = <CategoryNew[]>res;\n    });\n  }\n\n  getCategoryName(categoryId) {\n    if (this.categories) {\n      var cat = this.categories.find(p => p.id == categoryId);\n      if (cat) {\n        return cat.name;\n      }\n    }\n    return \"\";\n  }\n\n  onDelete(productNew: ProductNew) {\n    if (confirm(\"Do you want to delete news: \" + productNew.name + \" ?\")) {\n      this.service\n        .delete(productNew.id)\n        .subscribe((response) => {\n          this.fetchAllProducts();\n          this.loadingService.disableLoading();\n        });\n    }\n  }\n\n  numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n  doFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  ngOnDestroy(): void {\n    if (this.productSubscription) this.productSubscription.unsubscribe();\n  }\n\n  exportExcel(): void {\n    const pageOption = {\n      size: 9999,\n      page: this.pageIndex\n    }\n    if (this.categoryTypeId) {\n      this.productSubscription = this.service.findByCategoryType(this.categoryTypeId, pageOption).subscribe((data) => {\n        this.products = <ProductNew[]>data.content;\n      });\n    } else if (this.categoryId) {\n      this.productSubscription = this.service.findByCategoryId(this.categoryId, pageOption).subscribe((data) => {\n        this.products = <ProductNew[]>data.content;\n      });\n    } else {\n      this.productSubscription = this.service.fetchAllProducts(pageOption).subscribe((data) => {\n        this.products = <ProductNew[]>data.content;\n      });\n    }\n\n    const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(this.products);  \n    const workbook: XLSX.WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };  \n    XLSX.writeFile(workbook, this.fileName);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"backdrop\"></div>\n<router-outlet></router-outlet>\n","<div class=\"row h-100 align-items-center\">\n  <div class=\"col-12\">\n    <div class=\"my-card mx-auto\">\n      <div class=\"row\">\n        <div class=\"col-6 front-img\">\n        </div>\n        <div class=\"col-6 user-form\">\n          <div class=\"p-5\">\n            <div class=\"text-center logo-container\">\n              <img class=\"logo\" [routerLink]=\"['/']\" src=\"assets/images/gift-box.svg\" />\n              <img class=\"title\" [routerLink]=\"['/']\" src=\"assets/images/logo-text.png\" />\n              <hr>\n            </div>\n            <form\n            class=\"user\"\n            [formGroup]=\"resetPasswordForm\"\n            (ngSubmit)=\"resetPassword()\"\n          >\n            <div class=\"form-group\">\n              <input\n                class=\"form-control form-control-user\"\n                type=\"username\"\n                formControlName=\"username\"\n                placeholder=\"Username\"\n                name=\"username\"\n              />\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"securityAnswer\">\n                {{ question }}\n              </label>\n              <input\n                class=\"form-control form-control-user\"\n                type=\"text\"\n                formControlName=\"securityAnswer\"\n                type=\"text\"\n                placeholder=\"Enter Answer\"\n                name=\"securityAnswer\"\n                [ngClass]=\"{'is-invalid':submitted && resetPasswordForm.get('securityAnswer').invalid}\"\n              />\n              <div class=\"invalid-feedback\" *ngIf=\"submitted && resetPasswordForm.get('securityAnswer').invalid\">\n                <div *ngIf=\"resetPasswordForm.get('securityAnswer').errors['required']\">\n                  * Required\n                </div>\n                <div *ngIf=\"resetPasswordForm.get('securityAnswer').errors['serverValidationError']\">\n                  {{resetPasswordForm.controls[\"securityAnswer\"].errors.serverValidationError}}\n                </div>\n              </div>\n            </div>\n\n            <div class=\"form-group\">\n              <input\n                class=\"form-control form-control-user\"\n                type=\"password\"\n                formControlName=\"newPassword\"\n                id=\"newPassword\"\n                placeholder=\"Enter New Password\"\n                name=\"newPassword\"\n                [ngClass]=\"{'is-invalid':submitted && resetPasswordForm.get('newPassword').invalid}\"\n              />\n              <div class=\"invalid-feedback\" *ngIf=\"submitted && resetPasswordForm.get('newPassword').invalid\">\n                <div *ngIf=\"resetPasswordForm.get('newPassword').errors['required']\">\n                  * Required\n                </div>\n                <div *ngIf=\"resetPasswordForm.get('newPassword').errors['serverValidationError']\">\n                  {{resetPasswordForm.controls[\"newPassword\"].errors.serverValidationError}}\n                </div>\n              </div>\n            </div>\n            <button\n              class=\"primary-btn btn-block\"\n              type=\"submit\"\n            >\n              <span\n                *ngIf=\"loadingService.loading\"\n                class=\"spinner-border spinner-border-sm\"\n              ></span>\n              Reset Password\n            </button>\n          </form>\n          <br>\n          <!-- <hr /> -->\n          <div *ngIf=\"success\" class=\"alert alert-success\" role=\"alert\">\n            Sucessfully Updated Password\n          </div>\n          <div class=\"text-center\">\n            <a class=\"mr-1 actions\" [routerLink]=\"['/auth/forgotpassword']\">Back</a>\n            |\n            <a class=\"ml-1 actions\" [routerLink]=\"['/auth/login']\"> Login</a>\n          </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { EventService } from 'src/app/services/event.service';\nimport { LoadingService } from 'src/app/services/loading.service';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss'],\n})\nexport class ChangePasswordComponent implements OnInit, OnDestroy {\n  resetPasswordForm: FormGroup;\n  submitted = false;\n  success = false;\n  question = 'Not Found';\n  resetPasswordSubscription: Subscription;\n\n  constructor(\n    private authService: AuthService,\n    public loadingService: LoadingService,\n    private router: Router,\n    private eventService: EventService\n  ) { }\n\n  ngOnDestroy(): void {\n    if (this.resetPasswordSubscription)\n      this.resetPasswordSubscription.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    this.initPasswordResetForm();\n  }\n\n  resetPassword() {\n    this.submitted = true;\n    console.log(this.resetPasswordForm.value);\n\n    if (this.resetPasswordForm.valid)\n      this.submitResetForm(this.resetPasswordForm.getRawValue());\n  }\n\n  submitResetForm(formData) {\n    formData.username;\n    this.loadingService.enableLoading();\n    this.resetPasswordSubscription = this.authService\n      .requestPasswordReset(formData)\n      .subscribe(\n        (response) => {\n          this.success = true;\n          setTimeout(() => {\n            this.router.navigateByUrl('/auth/login');\n          }, 3000);\n          this.loadingService.disableLoading();\n        },\n        (error) => {\n          this.loadingService.disableLoading();\n          console.log(error);\n\n          if (error.error.message === 'FieldException')\n            error.error.errors.forEach((element) =>\n              this.resetPasswordForm.controls[element.field]?.setErrors({\n                serverValidationError: element.message,\n              })\n            );\n          else throw new Error(error);\n        }\n      );\n  }\n\n  initPasswordResetForm() {\n    const res = this.eventService.resetPasswordData.value;\n    if (res === null) this.router.navigateByUrl('/auth/forgotpassword');\n    this.question = res?.securityQuestion;\n    this.resetPasswordForm = new FormGroup({\n      username: new FormControl({ value: res?.username, disabled: true }, [\n        Validators.required,\n      ]),\n      newPassword: new FormControl('', [Validators.required]),\n      securityAnswer: new FormControl('', [Validators.required]),\n    });\n  }\n}\n","<div class=\"row h-100 align-items-center\">\n  <div class=\"col-12\">\n    <div class=\"my-card mx-auto\">\n      <div class=\"row\">\n        <div class=\"col-6 front-img\"></div>\n        <div class=\"col-6 user-form\">\n          <div class=\"p-5\">\n            <div class=\"text-center logo-container\">\n              <img class=\"logo\" [routerLink]=\"['/']\" src=\"assets/images/envispace-logo.jpg\" />\n              <hr />\n            </div>\n            <form class=\"user\" [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n              <div class=\"form-group\">\n                <input class=\"form-control form-control-user\" type=\"username\" formControlName=\"username\"\n                  placeholder=\"Username or Email\" [ngClass]=\"{\n                    'is-invalid': submitted && loginForm.get('username').invalid\n                  }\" name=\"username\" />\n                <div class=\"invalid-feedback\" *ngIf=\"submitted && loginForm.get('username').invalid\">\n                  <div *ngIf=\"loginForm.get('username').errors['required']\">\n                    * Required\n                  </div>\n                  <div *ngIf=\"\n                      loginForm.get('username').errors['serverValidationError']\n                    \">\n                    {{\n                    loginForm.controls[\"username\"].errors\n                    .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <input class=\"form-control form-control-user\" type=\"password\" formControlName=\"password\" type=\"password\"\n                  id=\"exampleInputPassword\" placeholder=\"Password\" name=\"password\" [ngClass]=\"{\n                    'is-invalid': submitted && loginForm.get('password').invalid\n                  }\" />\n                <div class=\"invalid-feedback\" *ngIf=\"submitted && loginForm.get('password').invalid\">\n                  <div *ngIf=\"loginForm.get('password').errors['required']\">\n                    * Required\n                  </div>\n                  <div *ngIf=\"\n                      loginForm.get('password').errors['serverValidationError']\n                    \">\n                    {{\n                    loginForm.controls[\"password\"].errors\n                    .serverValidationError\n                    }}\n                  </div>\n                </div>\n              </div>\n\n              <button class=\"primary-btn btn-block\" type=\"submit\">\n                <span *ngIf=\"loadingService.loading\" class=\"spinner-border spinner-border-sm\"></span>\n                Login\n              </button>\n              <a *ngIf=\"false\" class=\"secondary-btn btn-block\" [routerLink]=\"['/auth/register']\">Register\n              </a>\n              <br>\n              <br>\n              <div *ngIf=\"false\" class=\"social\">\n                <img class=\"social-icon\" src=\"assets/images/btn_google_normal.svg\" alt=\"\" id=\"googleBtn\" />\n                <img class=\"social-icon icon-bar facebook\" src=\"assets/images/facebook.svg\" alt=\"\"\n                  (click)=\"submitLogin()\" />\n              </div>\n              <br />\n            </form>\n            <div class=\"text-center\" *ngIf=\"false\" >\n              <a class=\"actions\" [routerLink]=\"['/auth/forgotpassword']\">Forgot Password?\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, NgZone, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { LoadingService } from 'src/app/services/loading.service';\n\ndeclare const gapi: any;\ndeclare const FB: any;\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  submitted = false;\n  loginSubscription: Subscription;\n  returnUrl;\n  googleLogin;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    public loadingService: LoadingService,\n    private route: ActivatedRoute,\n    private ngZone: NgZone\n  ) {}\n\n  ngOnDestroy(): void {\n    if (this.loginSubscription) this.loginSubscription.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    this.authService.redirectIfLoggedIn();\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    this.initForm();\n    (window as any).googleLogin = this.googleLogin;\n  }\n\n  login() {\n    this.submitted = true;\n    if (this.loginForm.valid) this.submitData(this.loginForm.value);\n  }\n\n  submitData(formData: any) {\n    this.loadingService.enableLoading();\n    this.loginSubscription = this.authService.login(formData).subscribe(\n      (response) => {\n        this.router.navigate([\"./admin\"])\n        this.loadingService.disableLoading();\n      },\n      (error) => {\n        this.loadingService.disableLoading();\n        if (error.error.message === 'FieldException')\n          error.error.errors.forEach((element) =>\n            this.loginForm.controls[element.field]?.setErrors({\n              serverValidationError: element.message,\n            })\n          );\n        else throw new Error(error);\n      }\n    );\n  }\n\n  initForm() {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required]),\n    });\n  }\n\n  // Google sign in\n  auth2;\n  logo = '^assets/images/btn_google_light_normal.svg';\n\n  public attachSignin(element) {\n    this.auth2.attachClickHandler(element, {}, (googleUser) =>\n      this.ngZone.run(\n        () => {\n          console.log(googleUser);\n          this.loadingService.enableLoading();\n        },\n        (error) => console.log(error)\n      )\n    );\n  }\n\n  ngAfterViewInit() {\n  }\n\n  submitLogin() {\n    FB.login((response) =>\n      this.ngZone.run(() => {\n        if (response.authResponse) {\n          FB.api('/me', { fields: 'name, email' }, (res) => {\n            console.log(res);\n            console.log(response);\n            this.loadingService.enableLoading();\n          });\n        } else throw Error('Error Signing from facebook');\n      })\n    );\n  }\n}\n\n","<div class=\"row h-100 align-items-center\">\n  <div class=\"col-12\">\n    <div class=\"my-card mx-auto\">\n      <div class=\"row\">\n        <!-- <div class=\"col-6 front-img\"></div> -->\n        <div class=\"col-12 user-form\">\n          <div class=\"p-3\">\n            <div class=\"logo-container\">\n              <img [routerLink]=\"['/']\" class=\"title\" src=\"assets/images/logo-text.png\" />\n              <hr>\n            </div>\n            <!-- <div class=\"text-center\">\n              <img class=\"logo\" src=\"assets/images/gift-box.svg\" />\n              <img class=\"title\" src=\"assets/images/logo-text.png\" />\n            </div> -->\n            <form (ngSubmit)=\"submitForm()\" [formGroup]=\"userForm\">\n                  <div class=\"row\">\n                    <div class=\"col\">\n                      <div class=\"form-group\">\n                        <label for=\"firstName\"\n                          ><strong>First Name</strong><br /></label\n                        ><input\n                          class=\"form-control\"\n                          formControlName=\"firstName\"\n                          type=\"text\"\n                          placeholder=\"First Name\"\n                          name=\"firstName\"\n                          [ngClass]=\"{'is-invalid': submitted && userForm.get('firstName').invalid}\"\n                        />\n                        <div class=\"invalid-feedback\" *ngIf=\"submitted && userForm.get('firstName').invalid\">\n                          <div *ngIf=\"userForm.get('firstName').errors['required']\">* Required</div>\n                          <div *ngIf=\"userForm.get('firstName').errors['serverValidationError']\"> \n                              {{userForm.controls['firstName'].errors.serverValidationError }} \n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col\">\n                      <div class=\"form-group\">\n                        <label for=\"lastName\"><strong>Last Name</strong></label\n                        ><input\n                          class=\"form-control\"\n                          formControlName=\"lastName\"\n                          type=\"text\"\n                          placeholder=\"Last Name\"\n                          name=\"lastName\"\n                          [ngClass]=\"{'is-invalid': submitted && userForm.get('lastName').invalid}\"\n                        />\n                        <div class=\"invalid-feedback\" *ngIf=\"submitted && userForm.get('lastName').invalid\">\n                          <div *ngIf=\"userForm.get('lastName').errors['required']\">* Required</div>\n                          <div *ngIf=\"userForm.get('lastName').errors['serverValidationError']\"> \n                              {{userForm.controls['lastName'].errors.serverValidationError }} \n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col\">\n                      <div class=\"form-group\">\n                        <label for=\"phoneNo\"><strong>Phone No</strong><br /></label\n                        ><input\n                          class=\"form-control\"\n                          type=\"text\"\n                          placeholder=\"Enter Phone No.\"\n                          name=\"phoneNo\"\n                          formControlName=\"phoneNo\"\n                          [ngClass]=\"{'is-invalid': submitted && userForm.get('phoneNo').invalid}\"\n                        />\n                        <div class=\"invalid-feedback\" *ngIf=\"submitted && userForm.get('phoneNo').invalid\">\n                          <div *ngIf=\"userForm.get('phoneNo').errors['required']\">* Required</div>\n                          <div *ngIf=\"userForm.get('phoneNo').errors['serverValidationError']\"> \n                              {{userForm.controls['phoneNo'].errors.serverValidationError }} \n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col\">\n                      <div class=\"form-group\">\n                        <label for=\"emailId\"><strong>Email</strong><br /></label\n                        ><input\n                          class=\"form-control\"\n                          type=\"text\"\n                          placeholder=\"Email\"\n                          name=\"emailId\"\n                          formControlName=\"emailId\"\n                          [ngClass]=\"{'is-invalid': submitted && userForm.get('emailId').invalid}\"\n                        />\n                        <div class=\"invalid-feedback\" *ngIf=\"submitted && userForm.get('emailId').invalid\">\n                          <div *ngIf=\"userForm.get('emailId').errors['required']\">* Required</div>\n                          <div *ngIf=\"userForm.get('emailId').errors['serverValidationError']\"> \n                              {{userForm.controls['emailId'].errors.serverValidationError }} \n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div>\n                  <div  formGroupName=\"address\">\n                    <div class=\"row\">\n                      <div class=\"col\">\n                        <div class=\"form-group\">\n                          <label for=\"city\"><strong>City</strong></label\n                          ><input\n                            type=\"text\"\n                            class=\"form-control\"\n                            placeholder=\"City\"\n                            name=\"city\"\n                            [ngClass]=\"{'is-invalid': submitted && userForm.get('address.city').invalid}\"\n                            formControlName=\"city\"\n                          />\n                          <div class=\"invalid-feedback\" *ngIf=\"submitted && userForm.get('address.city').invalid\">\n                            <div *ngIf=\"userForm.get('address.city').errors['required']\">* Required</div>\n                            <div *ngIf=\"userForm.get('address.city').errors['minlength']\">Min length ust be 4</div>\n                            <div *ngIf=\"userForm.get('address.city').errors['maxlength']\">Max length must be 30</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col\">\n                        <div class=\"form-group\">\n                          <label for=\"country\"><strong>State</strong></label\n                          ><input\n                            type=\"text\"\n                            class=\"form-control\"\n                            placeholder=\"State\"\n                            name=\"State\"\n                            [ngClass]=\"{'is-invalid': submitted && userForm.get('address.state').invalid}\"\n                            formControlName=\"state\"\n                          />\n                          <div class=\"invalid-feedback\" *ngIf=\"submitted && userForm.get('address.state').invalid\">\n                            <div *ngIf=\"userForm.get('address.state').errors['required']\">* Required</div>\n                            <div *ngIf=\"userForm.get('address.state').errors['minlength']\">Min length ust be 4</div>\n                            <div *ngIf=\"userForm.get('address.state').errors['maxlength']\">Max length must be 30</div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col\">\n                        <div class=\"form-group\">\n                          <label for=\"area\"><strong>Area</strong></label\n                          ><input\n                            type=\"text\"\n                            class=\"form-control\"\n                            placeholder=\"Area\"\n                            name=\"area\"\n                            [ngClass]=\"{'is-invalid': submitted && userForm.get('address.area').invalid}\"\n                            formControlName=\"area\"\n                          />\n                          <div class=\"invalid-feedback\" *ngIf=\"submitted && userForm.get('address.area').invalid\">\n                            <div *ngIf=\"userForm.get('address.area').errors['required']\">* Required</div>\n                            <div *ngIf=\"userForm.get('address.area').errors['minlength']\">Min length ust be 4</div>\n                            <div *ngIf=\"userForm.get('address.area').errors['maxlength']\">Max length must be 30</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col\">\n                        <div class=\"form-group\">\n                          <label for=\"pinode\"><strong>pincode</strong></label\n                          ><input\n                            type=\"text\"\n                            class=\"form-control\"\n                            placeholder=\"pincode\"\n                            name=\"pincode\"\n                            formControlName=\"pincode\"\n                            [ngClass]=\"{'is-invalid': submitted && userForm.get('address.pincode').invalid}\"\n                          />\n                          <div class=\"invalid-feedback\" *ngIf=\"submitted && userForm.get('address.pincode').invalid\">\n                            <div *ngIf=\"userForm.get('address.pincode').errors['required']\">* Required</div>\n                            <div *ngIf=\"userForm.get('address.pincode').errors['pattern']\">Must be of length 6</div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                  <div class=\"row\">\n                    <div class=\"col\">\n                      <div class=\"form-group\">\n                        <label for=\"password\"><strong>Password</strong></label\n                        ><input\n                          type=\"password\"\n                          class=\"form-control\"\n                          placeholder=\"Enter Password\"\n                          name=\"password\"\n                          formControlName=\"password\"\n                          [ngClass]=\"{'is-invalid': submitted && userForm.get('password').invalid}\"\n                        />\n                        <div class=\"invalid-feedback\" *ngIf=\"submitted && userForm.get('password').invalid\">\n                          <div *ngIf=\"userForm.get('password').errors['required']\">* Required</div>\n                          <div *ngIf=\"userForm.get('password').errors['serverValidationError']\"> \n                              {{userForm.controls['password'].errors.serverValidationError }} \n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col\">\n                      <div class=\"form-group\">\n                        <label for=\"password2\"\n                          ><strong>Re-enter Password</strong></label\n                        ><input\n                          type=\"password\"\n                          class=\"form-control\"\n                          placeholder=\"Re-enter Password\"\n                          name=\"password2\"\n                          formControlName=\"password2\"\n                          [ngClass]=\"{'is-invalid': submitted && userForm.get('password2').invalid}\"\n                        />\n                        <div class=\"invalid-feedback\" *ngIf=\"submitted && userForm.get('password2').invalid\">\n                          <div *ngIf=\"userForm.get('password2').errors['required']\">* Required</div><div *ngIf=\"userForm.get('password2').errors['passwordMatchError']\">Password not same</div>\n                          <div *ngIf=\"userForm.get('password2').errors['serverValidationError']\"> \n                              {{userForm.controls['password2'].errors.serverValidationError }} \n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col\">\n                      <div class=\"form-group\">\n                        <label for=\"username\"><strong>Username</strong></label\n                        ><input\n                          type=\"text\"\n                          class=\"form-control\"\n                          placeholder=\"Enter Username\"\n                          name=\"username\"\n                          formControlName=\"username\"\n                          [ngClass]=\"{'is-invalid': submitted && userForm.get('username').invalid}\"\n                        />\n                        <div class=\"invalid-feedback\" *ngIf=\"submitted && userForm.get('username').invalid\">\n                          <div *ngIf=\"userForm.get('username').errors['required']\">* Required</div>\n                          <div *ngIf=\"userForm.get('username').errors['serverValidationError']\"> \n                              {{userForm.controls['username'].errors.serverValidationError }} \n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col\">\n                      <div class=\"form-group\">\n                        <button class=\"primary-btn btn-block\" type=\"submit\">\n                          <span *ngIf=\"loadingService.loading\" class=\"spinner-border spinner-border-sm\"></span>\n                          Register\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                  <div *ngIf=\"message\" class=\"alert alert-success\" role=\"alert\">\n                    {{message}}\n                  </div>\n            </form>\n            <div class=\"text-center\">\n              <hr>\n              <a class=\"actions\" [routerLink]=\"['/auth/login']\"\n                >Back to Login\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { ManageUserService } from 'src/app/services/manage-user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  submitted = false;\n  userForm: FormGroup;\n  addUserSubscription: Subscription;\n  message = null;\n  maxDate = new Date(new Date().setFullYear(new Date().getFullYear() - 14)).toISOString().slice(0, 10)\n  // new Date().toISOString().slice(0,10) - ;\n\n  constructor(\n    private manageUserService: ManageUserService,\n    public loadingService: LoadingService,\n    private router: Router\n  ) {\n    this.initForm();\n  }\n\n  ngOnInit(): void {}\n\n  submitForm() {\n    this.submitted = true;\n    if (this.userForm.valid) this.addUser(this.userForm.value);\n  }\n\n  addUser(formData) {\n    this.loadingService.enableLoading();\n    this.addUserSubscription = this.manageUserService\n      .addUser(formData)\n      .subscribe(\n        (response) => {\n          this.loadingService.disableLoading();\n          this.message =\n            'Successfully Created user with ID ' + response['userId'];\n          setTimeout(() => {\n            this.router.navigateByUrl('/login');\n          }, 3000);\n        },\n        (error) => {\n          console.log(error);\n          this.loadingService.disableLoading();\n          if (error.error.message === 'FieldException')\n            error.error.errors.forEach((element) =>\n              this.userForm.controls[element.field]?.setErrors({\n                serverValidationError: element.message,\n              })\n            );\n          else throw new Error(error);\n        }\n      );\n  }\n\n  initForm() {\n    this.userForm = new FormGroup(\n      {\n        firstName: new FormControl('', [Validators.required]),\n        lastName: new FormControl('', [Validators.required]),\n        phoneNo: new FormControl('', [Validators.required]),\n        emailId: new FormControl('', [Validators.required]),\n        username: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required]),\n        password2: new FormControl('', [Validators.required]),\n        address: new FormGroup({\n          state: new FormControl('', [\n            Validators.required,\n            Validators.minLength(4),\n            Validators.maxLength(30),\n          ]),\n          area: new FormControl('', [\n            Validators.required,\n            Validators.minLength(4),\n            Validators.maxLength(30),\n          ]),\n          city: new FormControl('', [\n            Validators.required,\n            Validators.minLength(4),\n            Validators.maxLength(30),\n          ]),\n          pincode: new FormControl('', [\n            Validators.required,\n            Validators.pattern('[0-9]{6}'),\n          ]),\n        }),\n      },\n      { validators: this.matchPassword }\n    );\n  }\n\n  matchPassword(control: FormControl) {\n    const password = control.get('password').value;\n    const password2 = control.get('password2').value;\n    if (password != password2) {\n      control.get('password2').setErrors({ passwordMatchError: true });\n    } else {\n      return null;\n    }\n  }\n\n}\n","<div class=\"root\">\n  <div class=\"content\">\n    <div class=\"row\">\n      <div class=\"col image-news\" *ngIf=\"false\">\n        <img [src]=\"getImageUrl()\" style=\"width: 90%;\" />\n      </div>\n      <div class=\"col\">\n        <div>\n          <div class=\"section-back\" (click)=\"goBack()\" style=\"cursor: pointer;\">\n            <img class=\"back-img\" src=\"assets/images/back.svg\" alt=\"\" />\n            <span class=\"back-text\">Back</span>\n          </div>\n          <h1 class=\"title\">{{ news?.title }}</h1>\n          <p style=\"font-weight: 200; padding-left: 80%;\">{{news?.datetime}}</p>\n        </div>\n        <hr />\n      </div>\n    </div>\n    <br />\n    <div class=\"row\" style=\"margin: 0px 200px; font-size: 18px;\">\n      <div [innerHtml]=\"news?.content\"></div>\n    </div>\n    <br /><br /><br />\n  </div>\n</div>","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { News } from 'src/app/models/news';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { NewsService } from 'src/app/services/news.service';\n\n@Component({\n  selector: 'app-news-detail',\n  templateUrl: './news-detail.component.html',\n  styleUrls: ['./news-detail.component.scss'],\n})\nexport class NewsDetailComponent implements OnInit {\n  id;\n  news: News = null;\n\n  constructor(\n    public loadingService: LoadingService,\n    private router: Router,\n    private location: Location,\n    private newsService: NewsService,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.paramMap.get('id');\n    this.getDetails();\n  }\n\n  getDetails() {\n    if (this.id) {\n      this.newsService.fetchById(this.id).subscribe((res: News) => {\n        this.news = res;\n      }).closed;\n    }\n  }\n\n  getImageUrl() {\n    var news = this.news;\n    if (news && news.imagesUrl && news.imagesUrl.length > 0) {\n      return news.imagesUrl[0];\n    }\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n}\n","<div style=\"padding: 50px; text-align: center;\">\n  <div *ngFor=\"let item of newsList\" style=\"margin-bottom: 80px;\">\n    <div class=\"row\">\n      <div class=\"col image-news\">\n        <img [src]=\"getImageUrl(item)\" width=\"100%\" (error)=\"updateUrl($event)\"/>\n      </div>\n      <div class=\"col group-news\" style=\"flex-direction: column;\">\n        <div class=\"row title-news\" (click)=\"moveTo(item.id)\">{{item.title}}<p style=\"font-weight: 200; padding-left: 85%;\">{{item.datetime}}</p></div>\n        <div class=\"row short-news\">{{getSomeContent(item)}}</div>        \n        <div class=\"row more-news\" (click)=\"moveTo(item.id)\">Xem Thêm</div>\n      </div>\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"pages.length > 1\">\n    <div *ngFor=\"let item of pages; let i = index\" class=\"page-item {{i==pageIndex?'selected':''}}\" (click)=\"changePage(i+1)\">{{i+1}}</div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { NewsService } from 'src/app/services/news.service';\nimport { News } from 'src/app/models/news';\nimport * as $ from 'jquery';\n\n@Component({\n  selector: 'app-news-list',\n  templateUrl: './news-list.component.html',\n  styleUrls: ['./news-list.component.scss'],\n})\nexport class NewsListComponent implements OnInit {\n  newsList: News[] = [];\n  orignalNewsList: News[] = [];\n  pageIndex = 0;\n  pageSize = 10;\n  pages = [];\n\n  constructor(\n    public loadingService: LoadingService,\n    private newsService: NewsService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.fetchAllNews();\n  }\n\n  //newsType = 0\n  fetchAllNews() {\n    this.loadingService.enableLoading();\n    this.newsService\n      .fetchByType(0)\n      .subscribe((response: any) => {\n        this.orignalNewsList = <News[]>response.content;\n        this.loadingService.disableLoading();\n        var numberOfPage = Math.ceil(this.orignalNewsList.length / this.pageSize);\n        this.pages = Array(numberOfPage).fill(1).map((x, i) => i)\n        this.changePage(1);\n      });\n  }\n\n  moveTo(id) {\n    this.router.navigate([\"./news/\" + id])\n  }\n\n  changePage(page) {\n    this.pageIndex = page - 1;\n    this.newsList = [];\n    var start = this.pageIndex * this.pageSize;\n    var end = start + this.pageSize;\n    if (end > this.orignalNewsList.length) {\n      end = this.orignalNewsList.length;\n    }\n    for (var i = start; i < end; i++) {\n      this.newsList.push(this.orignalNewsList[i]);\n    }\n  }\n\n  updateUrl(event) {\n    event.target.src = '../../../assets/images/no-image.png';\n  }\n\n  getImageUrl(news: News) {\n    if (news.imagesUrl && news.imagesUrl.length > 0) {\n      return news.imagesUrl[0];\n    }\n  }\n\n  getSomeContent(news: News) {\n    var content = $('<div>').html(news.content).text();\n    if (content.length > 500) {\n      return content.substring(0, 500) + \" ...\"\n    }\n    return content;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-news',\n  templateUrl: './news.component.html',\n  styleUrls: ['./news.component.scss']\n})\nexport class NewsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"allButFooter\">\n  <app-navigation></app-navigation>\n  <div class=\"backdrop\"></div>\n  <div class=\"content\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n\n<app-footer></app-footer>\n","<div class=\"root\">\n  <div class=\"content\">\n    <div class=\"row\">\n      <div class=\"col image-news\" *ngIf=\"false\">\n        <img [src]=\"getImageUrl()\" style=\"width: 90%;\" />\n      </div>\n      <div class=\"col\">\n        <div>\n          <div class=\"section-back\" (click)=\"goBack()\" style=\"cursor: pointer;\">\n            <img class=\"back-img\" src=\"assets/images/back.svg\" alt=\"\" />\n            <span class=\"back-text\">Back</span>\n          </div>\n          <h1 class=\"title\">{{ news?.title }}</h1>\n          <p style=\"font-weight: 200; padding-left: 80%;\">{{news?.datetime}}</p>\n        </div>\n        <hr />\n      </div>\n    </div>\n    <br />\n    <div class=\"row\" style=\"margin: 0px 200px; font-size: 18px;\">\n      <div [innerHtml]=\"news?.content\"></div>\n    </div>\n    <br /><br /><br />\n  </div>\n</div>","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { News } from 'src/app/models/news';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { NewsService } from 'src/app/services/news.service';\n\n@Component({\n  selector: 'app-others-detail',\n  templateUrl: './others-detail.component.html',\n  styleUrls: ['./others-detail.component.scss'],\n})\nexport class OthersDetailComponent implements OnInit {\n  id;\n  news: News = null;\n\n  constructor(\n    public loadingService: LoadingService,\n    private router: Router,\n    private location: Location,\n    private newsService: NewsService,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.paramMap.get('id');\n    this.getDetails();\n  }\n\n  getDetails() {\n    if (this.id) {\n      this.newsService.fetchById(this.id).subscribe((res: News) => {\n        this.news = res;\n      }).closed;\n    }\n  }\n\n  getImageUrl() {\n    var news = this.news;\n    if (news && news.imagesUrl && news.imagesUrl.length > 0) {\n      return news.imagesUrl[0];\n    }\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n}\n","<div style=\"padding: 50px; text-align: center;\">\n  <div *ngFor=\"let item of newsList\" style=\"margin-bottom: 80px;\">\n    <div class=\"row\">\n      <div class=\"col image-news\">\n        <img [src]=\"getImageUrl(item)\" width=\"100%\" (error)=\"updateUrl($event)\"/>\n      </div>\n      <div class=\"col group-news\" style=\"flex-direction: column;\">\n        <div class=\"row title-news\" (click)=\"moveTo(item.id)\">{{item.title}}<p style=\"font-weight: 200; padding-left: 85%;\">{{item.datetime}}</p></div>\n        <div class=\"row short-news\">{{getSomeContent(item)}}</div>        \n        <div class=\"row more-news\" (click)=\"moveTo(item.id)\">Xem Thêm</div>\n      </div>\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"pages.length > 1\">\n    <div *ngFor=\"let item of pages; let i = index\" class=\"page-item {{i==pageIndex?'selected':''}}\" (click)=\"changePage(i+1)\">{{i+1}}</div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { NewsService } from 'src/app/services/news.service';\nimport { News } from 'src/app/models/news';\nimport * as $ from 'jquery';\n\n@Component({\n  selector: 'app-others-list',\n  templateUrl: './others-list.component.html',\n  styleUrls: ['./others-list.component.scss'],\n})\nexport class OthersListComponent implements OnInit {\n  newsList: News[] = [];\n  orignalNewsList: News[] = [];\n  pageIndex = 0;\n  pageSize = 10;\n  pages = [];\n\n  constructor(\n    public loadingService: LoadingService,\n    private newsService: NewsService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.fetchAllOthers();\n  }\n\n  //newsType = 1\n  fetchAllOthers() {\n    this.loadingService.enableLoading();\n    this.newsService\n      .fetchByType(1)\n      .subscribe((response: any) => {\n        this.orignalNewsList = <News[]>response.content;\n        this.loadingService.disableLoading();\n        var numberOfPage = Math.ceil(this.orignalNewsList.length / this.pageSize);\n        this.pages = Array(numberOfPage).fill(1).map((x, i) => i)\n        this.changePage(1);\n      });\n  }\n\n  moveTo(id) {\n    this.router.navigate([\"./others/\" + id])\n  }\n\n  changePage(page) {\n    this.pageIndex = page - 1;\n    this.newsList = [];\n    var start = this.pageIndex * this.pageSize;\n    var end = start + this.pageSize;\n    if (end > this.orignalNewsList.length) {\n      end = this.orignalNewsList.length;\n    }\n    for (var i = start; i < end; i++) {\n      this.newsList.push(this.orignalNewsList[i]);\n    }\n  }\n\n  updateUrl(event) {\n    event.target.src = '../../../assets/images/no-image.png';\n  }\n\n  getImageUrl(news: News) {\n    if (news.imagesUrl && news.imagesUrl.length > 0) {\n      return news.imagesUrl[0];\n    }\n  }\n\n  getSomeContent(news: News) {\n    var content = $('<div>').html(news.content).text();\n    if (content.length > 500) {\n      return content.substring(0, 500) + \" ...\"\n    }\n    return content;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-others',\n  templateUrl: './others.component.html',\n  styleUrls: ['./others.component.scss']\n})\nexport class OthersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"allButFooter\">\n  <app-navigation></app-navigation>\n  <!-- <div class=\"backdrop\"></div> -->\n  <div class=\"backdrop\"></div>\n  <div class=\"content\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n\n<app-footer></app-footer>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about-us',\n  templateUrl: './about-us.component.html',\n  styleUrls: ['./about-us.component.scss']\n})\nexport class AboutUsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main-page\">\n    <article>\n        <div class=\"entry-content\">\n            <p style=\"text-align: center;\"><img class=\"brand-logo\" src=\"assets/images/envispace-logo.jpg\" alt=\"logo\" />\n            </p>\n            <p style=\"text-align: center;\">\n                <span style=\"font-size: 13pt;\">ENVI SPACE là công ty chuyên về tư vấn - thiết kế nội và ngoại thất nhà\n                    được thành lập vào 09.2021. Chúng tôi hướng đến việc mang lại một không gian xanh cho ngôi nhà thân\n                    yêu của khách hàng.\n                    <br>\n                    Với lợi thế sản xuất trực tiếp, ENVI SPACE cung cấp các vật liệu xây dựng ngoại thất như gạch, đá,\n                    bê tông giả gỗ... với nhiều mẫu mã đẹp riêng có, phong phú, và giá cả cạnh tranh.\n                    <br>\n                    Đội ngũ thiết kế - thi công xây dựng tận tâm của chúng tôi cung cấp dịch vụ thi công trọn gói với\n                    chất lượng dịch vụ hậu mãi chu đáo mang đến sự yên tâm và gắn bó lâu dài của khách hàng.\n                </span>\n            </p>\n            <h3 style=\"text-align: center; font-weight: 600;\">VISION</h3>\n            <p style=\"text-align: center;\">\n                <span style=\"font-size: 13pt; color: #18b803e5; font-style: italic; font-weight: bold;\">ENVI SPACE là\n                    nhà tư vấn thiết kế\n                    \"KHÔNG GIAN XANH\" hàng đầu miền Trung, nhà cung cấp nguyên vật liệu nội ngoại thất chuyên nghiệp, uy\n                    tín và cạnh tranh ở Huế.\n                </span>\n            </p>\n            <br>\n            <h3 style=\"text-align: center; font-weight: 600;\">MISSION</h3>\n            <p style=\"text-align: center;\">\n                <span style=\"font-size: 13pt;\">Đồng hành với khách hàng trong việc mang lại không gian xanh và bền vững\n                    cho ngôi nhà thân yêu của gia đình.\n                </span>\n                <span style=\"font-size: 13pt;\">Phương châm hoạt động của chúng tôi là:<br><br>\n                    <span style=\"font-size: 13pt; color: #18b803e5; font-style: italic; font-weight: bold;\">Tận Tâm Tư\n                        Vấn - Bảo Đảm Thi Công - Chu Đáo Chăm Sóc.\n                    </span>\n                </span>\n            </p>\n            <div style=\"text-align: center;\">\n                <button [routerLink]=\"['/']\" type=\"button\" class=\"btn btn-success\">SẢN PHẨM VÀ DỊCH VỤ</button>\n            </div>\n            <p>&nbsp;</p>\n        </div>\n    </article>\n</div>","import { Component, EventEmitter, Input, OnInit, Output, AfterViewInit } from '@angular/core';\nimport { ProductNew } from 'src/app/models/product-new';\n\n@Component({\n  selector: 'app-cart-item-card',\n  templateUrl: './cart-item-card.component.html',\n  styleUrls: ['./cart-item-card.component.scss'],\n})\nexport class CartItemCardComponent implements OnInit{\n  @Input() product: ProductNew;\n  @Input() number: number;\n  @Output()\n  removeItemEvent = new EventEmitter<ProductNew>();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n\n  deleteProduct() {\n    this.removeItemEvent.emit(this.product);\n  }\n\n  numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n  }\n\n  \n}\n","<div class=\"product-item\">\n  <img\n    [src]=\"product.photoUrl\"\n    [alt]=\"product.name\"\n    class=\"product-img\"\n  />\n  <div class=\"product-details\">\n    <div class=\"product-data\">\n      <p class=\"product-name\">\n        {{ product.name }}\n        <img\n          class=\"detail\"\n          [routerLink]=\"['/products/detail', product.id]\"\n          src=\"assets/images/info.svg\"\n          alt=\"\"\n        />\n      </p>\n      <p class=\"product-description\">{{ product.description }}</p>\n    </div>\n    <div class=\"product-quantity\">\n      <img src=\"assets/images/cart.svg\" alt=\"\" />\n      <span> {{ number }} </span>\n    </div>\n    <div class=\"product-price\">\n      {{ numberWithCommas(product.price) }}\n    </div>\n    <img\n      (click)=\"deleteProduct()\"\n      class=\"product-delete\"\n      src=\"assets/images/delete.svg\"\n      alt=\"\"\n    />\n  </div>\n</div>\n","<div class=\"parent px-1 px-md-4 py-5 mx-auto\">\n  <div class=\"card\">\n    <div class=\"logo-container\">\n      <h1 class=\"title-main\">Cart Items</h1>\n      <hr />\n    </div>\n    <div class=\"section-empty\"  *ngIf=\"cartItems.length === 0\">\n      Its Seems Empty Around Here,\n      Lets start by adding few items in the cart.\n      <button class=\"primary-btn\" [routerLink]=\"['/']\">\n        Show Catalog\n      </button>\n    </div>\n    <div class=\"product-list\" *ngIf=\"cartItems.length > 0\">\n      <app-cart-item-card\n        [product]=\"item.product\"\n        [number]=\"item.number\"\n        (removeItemEvent)=\"removeItem($event)\"\n        *ngFor=\"let item of cartItems\"\n      ></app-cart-item-card>\n    </div>\n    <div class=\"logo-container\">\n      <br />\n      <br />\n      <h1 class=\"title-main\">Estimated Price</h1>\n      <hr />\n    </div>\n    <div>\n      <p class=\"summary\">\n        TOTAL &nbsp;<span class=\"item\">{{ numberWithCommas(totalPrice) }} </span>\n      </p>\n    <div style=\"margin-left: 10%;\">\n      <button class=\"primary-btn\" [routerLink]=\"['/']\">\n        Continue Shopping\n      </button>\n      <button class=\"secondary-btn\" [routerLink]=\"['/products/about']\">\n        Checkout\n      </button>\n    </div>\n    </div>\n  </div>\n</div>\n","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { CartItem } from 'src/app/models/cart-item';\nimport { ProductNew } from 'src/app/models/product-new';\n\n@Component({\n  selector: 'app-cart-new',\n  templateUrl: './cart-new.component.html',\n  styleUrls: ['./cart-new.component.scss'],\n})\nexport class CartNewComponent implements OnInit {\n  cartItems: CartItem[] = [];\n\n  totalPrice: number;\n\n  constructor(\n    private location: Location,\n  ) { }\n\n  ngOnInit(): void {\n    this.loadCardItems();\n  }\n\n  loadCardItems(){\n    var data = window.localStorage.getItem(\"cart-items\");\n    if(data){\n      this.cartItems = <CartItem[]>JSON.parse(data);\n    }else{\n      this.cartItems = [];\n    }\n    this.calculatePrice();\n  }\n\n  numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n  }\n\n  calculatePrice(){\n    this.totalPrice = 0;\n    for(var i =0; i<this.cartItems.length; i++){\n      this.totalPrice += this.cartItems[i].number * this.cartItems[i].product.price;\n    }\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  \n\n  removeItem(product: ProductNew) {\n    if(confirm(\"Do you want to delete product: \"+product.name +\" ?\")){\n      var index = this.cartItems.findIndex(p=>p.product.id == product.id);\n      if(index >= 0){\n        this.cartItems.splice(index, 1);\n        window.localStorage.setItem(\"cart-items\", JSON.stringify(this.cartItems));\n        this.loadCardItems();\n      }\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cart-summary',\n  templateUrl: './cart-summary.component.html',\n  styleUrls: ['./cart-summary.component.scss']\n})\nexport class CartSummaryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>cart-summary works!</p>\n","<div class=\"parent px-1 px-md-4 py-5 mx-auto\">\n  <div class=\"card\">\n    <div class=\"row d-flex justify-content-between px-3 top\">\n      <div class=\"logo-container\">\n        <img\n          [routerLink]=\"['/']\"\n          class=\"title\"\n          src=\"assets/images/logo-text.png\"\n        />\n        <!-- <hr /> -->\n      </div>\n    </div>\n\n    <div class=\"row d-flex justify-content-center\">\n      <div class=\"col-12\">\n        <ul id=\"progressbar\" class=\"text-center\">\n          <li\n            *ngFor=\"let item of activeStages\"\n            class=\"active step0\"\n            data-toggle=\"tooltip\"\n            [title]=\"item.title\"\n            data-placement=\"top\"\n            onmouseenter=\"$(this).tooltip('show')\"\n            onmouseout=\"$(this).tooltip('hide')\"\n          ></li>\n          <li\n            class=\"step0\"\n            *ngFor=\"let i of [].constructor(3 - activeStages.length)\"\n          ></li>\n        </ul>\n      </div>\n    </div>\n    <div class=\"logs-container\">\n      <div class=\"logs-heading\">\n        <h1 class=\"title-main\"> {{ title }} </h1>\n        <hr />\n        <div class=\"router\">\n          <router-outlet></router-outlet>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<app-order-cancel-modal></app-order-cancel-modal>\n","import { Location } from '@angular/common';\nimport { OnDestroy } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { LoadingService } from 'src/app/services/loading.service';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.scss'],\n})\nexport class CheckoutComponent implements OnInit, OnDestroy {\n  stages = [\n    { title: 'Shipping Details', color: '#24b7d8', path: 'shipping' },\n    { title: 'Payment', color: '#20a5c2', path: 'payment' },\n    { title: 'Success', color: '#1d92ad', path: 'success' },\n  ];\n\n  activeStages = [];\n  routeSubscription: Subscription;\n  title = 'Shipping Details';\n\n  constructor(\n    private location: Location,\n    public loadingService: LoadingService,\n    private router: Router\n  ) {\n    this.routeChangeSubscription();\n  }\n  ngOnDestroy(): void {\n    this.routeSubscription.unsubscribe();\n  }\n\n  ngOnInit(): void {}\n\n  goBack() {\n    this.location.back();\n  }\n\n  cancelOrder() {}\n\n  routeChangeSubscription() {\n    this.routeSubscription = this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe((val) => this.updateFlow(val['urlAfterRedirects']));\n  }\n  updateFlow(url) {\n    if (url.includes('/shipping')) {\n      this.activeStages = this.stages.slice(0, 1);\n      this.title = this.stages[0].title;\n    }\n    else if (url.includes('/payment')){\n      this.activeStages = this.stages.slice(0, 2);\n      this.title = this.stages[1].title;\n    }\n    else if (url.includes('/success')){\n      this.activeStages = this.stages.slice(0, 3);\n      this.title = this.stages[2].title;\n    }\n  }\n\n  getActiveStages() {\n    return this.activeStages;\n  }\n}\n","<div class=\"parent px-1 px-md-4 py-5 mx-auto\">\n  <div class=\"card\">\n    <div class=\"row d-flex justify-content-between px-3 top\">\n      <div class=\"logo-container\">\n        <img\n          [routerLink]=\"['/']\"\n          class=\"title\"\n          src=\"assets/images/logo-text.png\"\n        />\n        <hr />\n        <h1 class=\"title-main\">Purchase History</h1>\n      </div>\n      <div class=\"row\">\n        <section class=\"col\">\n          <p class=\"summary\">\n            Order #<span class=\"item\"> {{ orderDetails?.orderId }} </span>\n          </p>\n          <p class=\"summary\">\n            Current Status\n            <span class=\"item\">\n              {{ orderDetails?.orderStatus }}\n              <img\n                src=\"assets/images/info.svg\"\n                alt=\"\"\n                [routerLink]=\"['/products/delivery', orderDetails?.orderId]\"\n              />\n            </span>\n          </p>\n          <p class=\"summary\">\n            Updated On\n            <span class=\"item\">\n              {{ formattedDate(deliveryHistory?.slice(-1)[0]?.updatedOn) }}\n            </span>\n          </p>\n        </section>\n        <section class=\"col\">\n          <!-- Name -->\n          <p class=\"summary\">\n            Name\n            <span class=\"item\"> {{ orderDetails?.buyerName }} </span>\n          </p>\n          <!-- Phone -->\n          <p class=\"summary\">\n            Phone No.\n            <span class=\"item\"> {{ orderDetails?.buyerPhone }} </span>\n          </p>\n          <!-- Email -->\n          <p class=\"summary\">\n            Email\n            <span class=\"item\"> {{ orderDetails?.buyerEmail }} </span>\n          </p>\n        </section>\n      </div>\n      <!-- Address -->\n      <section>\n        <!-- Street -->\n        <p class=\"summary\">\n          Street\n          <span class=\"item\"> {{ orderDetails?.buyerAddress }} </span>\n        </p>\n        <!-- City -->\n        <p class=\"summary\">\n          City\n          <span class=\"item\"> {{ orderDetails?.buyerCity }} </span>\n        </p>\n        <!-- Phone -->\n        <p class=\"summary\">\n          State\n          <span class=\"item\"> {{ orderDetails?.buyerState }} </span>\n        </p>\n        <!-- Email -->\n        <p class=\"summary\">\n          Pincode\n          <span class=\"item\"> {{ orderDetails?.buyerPincode }} </span>\n        </p>\n      </section>\n    </div>\n    <!-- <div class=\"logs-container\"> -->\n    <div class=\"logs-heading\">\n      <hr />\n      <h1 class=\"title-main\">Payment Details</h1>\n    </div>\n    <section>\n      <p class=\"summary\">\n        Order Amount\n        <span class=\"item\">₹ {{ orderDetails?.orderAmount }} </span>\n      </p>\n      <p class=\"summary\">\n        Discounted Amount\n        <span class=\"item\">₹ {{ orderDetails?.discountedAmount }} </span>\n      </p>\n      <p class=\"summary\">\n        Delivery Charge\n        <span class=\"item\">₹ {{ orderDetails?.deliveryCharge }} </span>\n      </p>\n      <p class=\"summary\">\n        Final Price\n        <span class=\"item\">₹ {{ orderDetails?.finalPrice }} </span>\n      </p>\n      <p class=\"summary\">\n        Payment Type\n        <span class=\"item\"> {{ orderDetails?.paymentType }} </span>\n      </p>\n    </section>\n    <div class=\"logs-heading\">\n      <hr />\n      <h1 class=\"title-main\">Product Details</h1>\n      <div class=\"product-list\">\n        <app-product-detail-card\n          [productId]=\"item.productId\"\n          [productName]=\"item.productName\"\n          [productDescription]=\"item.productDescription\"\n          [productIcon]=\"item.productIcon\"\n          [productQuantity]=\"item.productStock\"\n          [productPrice]=\"item.productPrice\"\n          [discountPercent]=\"item.discountPercent\"\n          *ngFor=\"let item of orderDetails?.products\"\n        ></app-product-detail-card>\n      </div>\n    </div>\n\n    <!-- </div> -->\n    <br />\n    <div class=\"actions\">\n      <button class=\"back-btn\" (click)=\"goBack()\">Back</button>\n      <button\n        class=\"secondary-btn\"\n        [routerLink]=\"['/products/delivery', orderId]\"\n      >\n        Delivery History\n      </button>\n      <button\n        class=\"cancel-btn\"\n        (click)=\"cancelOrder()\"\n        *ngIf=\"checkIfCancellable()\"\n      >\n        <span\n          *ngIf=\"loadingService.loading\"\n          class=\"spinner-border spinner-border-sm\"\n        ></span>\n        Cancel Order\n      </button>\n    </div>\n  </div>\n</div>\n<app-order-cancel-modal></app-order-cancel-modal>\n","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { take, tap } from 'rxjs/operators';\nimport { DeliveryHistory } from 'src/app/models/delivery-history.model';\nimport { Order } from 'src/app/models/order.model';\nimport { DeliveryHistoryService } from 'src/app/services/delivery-history.service';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { OrderCancelModalService } from 'src/app/services/order-cancel-modal.service';\nimport { OrderService } from 'src/app/services/order.service';\n\n@Component({\n  selector: 'app-order-details-new',\n  templateUrl: './order-details-new.component.html',\n  styleUrls: ['./order-details-new.component.scss'],\n})\nexport class OrderDetailsNewComponent implements OnInit {\n  orderDetails: Order;\n  deliveryHistory: DeliveryHistory[];\n  orderId;\n\n  constructor(\n    private route: ActivatedRoute,\n    private orderService: OrderService,\n    private location: Location,\n    public loadingService: LoadingService,\n    private deliveryHistoryService: DeliveryHistoryService,\n    private orderCancelModal: OrderCancelModalService,\n  ) {}\n\n  ngOnInit(): void {\n    this.orderId = this.route.snapshot.params['orderId'];\n    this.fetchOrderDetails(this.orderId);\n    this.fetchDeliveryDetails(this.orderId);\n  }\n\n  fetchDeliveryDetails(id) {\n    this.deliveryHistoryService\n      .fetchDeliveryByOrderId(id)\n      .pipe(take(1))\n      .subscribe((res: DeliveryHistory[]) => (this.deliveryHistory = res));\n  }\n\n  fetchOrderDetails(id) {\n    this.orderService\n      .fetchById(id)\n      .pipe(take(1))\n      .pipe(\n        tap((res) => {\n          console.log(res);\n          return res;\n        })\n      )\n      .subscribe((res: Order) => (this.orderDetails = res));\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  formattedDate(date) {\n    return new Date(date).toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true,\n    });\n  }\n\n  cancelOrder() {\n    this.orderCancelModal.open();\n    this.orderCancelModal.watch().subscribe((res) => {\n      this.loadingService.enableLoading();\n      if (res !== 'cancel-order') this.loadingService.disableLoading();\n      else\n        this.orderService\n          .updateOrderStatus({\n            orderId: +this.orderDetails?.orderId,\n            status: 'CANCELLED',\n          })\n          .subscribe((res) => {\n            this.fetchOrderDetails(this.orderDetails?.orderId);\n            this.fetchDeliveryDetails(this.orderDetails?.orderId);\n          });\n    });\n  }\n\n  checkIfCancellable() {\n    return (\n      this.deliveryHistory?.slice(-1)[0]?.orderStatus !== 'DELIVERED' &&\n      this.deliveryHistory?.slice(-1)[0]?.orderStatus !== 'CANCELLED'\n    );\n  }\n}\n","<div class=\"product-item\">\n  <img\n    [src]=\"productIcon\"\n    [alt]=\"productName\"\n    (error)=\"$event.target.src = '^assets/images/celebration2.jpg'\"\n    class=\"product-img\"\n  />\n  <div class=\"product-details\">\n    <div class=\"product-data\">\n      <p class=\"product-name\">\n        {{ productName }}\n        <img\n          class=\"detail\"\n          [routerLink]=\"['/products', productId]\"\n          src=\"assets/images/info.svg\"\n          alt=\"\"\n        />\n      </p>\n      <p class=\"product-description\">{{ productDescription }}</p>\n    </div>\n    <div class=\"product-quantity\">\n      <img src=\"assets/images/cart.svg\" alt=\"\" />\n      <span> {{ productQuantity }} </span>\n    </div>\n    <div class=\"product-price\">\n      ₹ {{ discountPrice() }}\n      <span class=\"strike\" *ngIf=\"discountPercent > 0\"\n        >₹ {{ productPrice }}\n      </span>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product-detail-card',\n  templateUrl: './product-detail-card.component.html',\n  styleUrls: ['./product-detail-card.component.scss'],\n})\nexport class ProductDetailCardComponent implements OnInit {\n  @Input()\n  productId;\n  @Input()\n  productName;\n  @Input()\n  productDescription;\n  @Input()\n  productIcon;\n  @Input()\n  productPrice;\n  @Input()\n  productQuantity;\n  @Input()\n  discountPercent;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  discountPrice(): number {\n    return this.discountPercent <= 0\n      ? this.productPrice\n      : this.productPrice - this.productPrice * 0.01 * this.discountPercent;\n  }\n}\n","<div class=\"parent px-1 px-md-4 py-4 mx-auto\">\n  <div class=\"card\">\n    <div class=\"row d-flex justify-content-between px-3 top\">\n      <div class=\"logo-container\">\n        <h1 class=\"title-main\">My Order History</h1>\n        <hr />\n      </div>\n      <div class=\"section-empty\" *ngIf=\"orderHistory.length === 0\">\n        Its Seems Empty Around Here, Lets start by adding few items in the cart.\n        <button class=\"primary-btn\" [routerLink]=\"['/']\">Show Catalog</button>\n      </div>\n      <div class=\"section-table\">\n        <table mat-table [dataSource]=\"dataSource\" matSort>\n          <ng-container matColumnDef=\"orderId\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Order ID</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"product-id\">\n              #<span> {{ element.orderId }} </span> \n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"buyerName\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Contact</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"contact\">\n              <p class=\"name\">{{ element.buyerName }}</p>\n              <p class=\"phone\">{{ element.buyerPhone }}</p>\n              <p class=\"email\">{{ element.buyerEmail }}</p>\n              <p class=\"address\">{{ element.buyerAddress }}</p>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"finalPrice\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Price</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"price\">\n              ₹ <span>{{ element.finalPrice }}</span>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"orderStatus\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"delivery\">\n              <span [ngStyle]=\"{color: fetchColor(element.orderStatus)}\">{{ element.orderStatus }}</span>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"details\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Details</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"action-icon\">\n              <img\n                [routerLink]=\"['/products/orders', element.orderId]\"\n                src=\"assets/images/info.svg\"\n                alt=\"\"\n              />\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"history\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\n              Track Delivery\n            </th>\n            <td mat-cell *matCellDef=\"let element\" class=\"action-icon\">\n              <img\n                [routerLink]=\"['/products/delivery', element.orderId]\"\n                src=\"assets/images/package_track.svg\"\n                alt=\"\"\n              />\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        </table>\n        <mat-paginator\n          [pageSizeOptions]=\"[5, 10, 20]\"\n          showFirstLastButtons\n          [pageSize]=\"5\"\n        ></mat-paginator>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Location } from '@angular/common';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { take } from 'rxjs/operators';\nimport { Order } from 'src/app/models/order.model';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { OrderService } from 'src/app/services/order.service';\n\n@Component({\n  selector: 'app-order-history-new',\n  templateUrl: './order-history-new.component.html',\n  styleUrls: ['./order-history-new.component.scss'],\n})\nexport class OrderHistoryNewComponent implements OnInit {\n  orderHistory: Order[] = [];\n  dataSource = new MatTableDataSource<Order>();\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  // Specify columns tht should be rendered, must match names of matColumnDef\n  // ID is not beign displayed as its not present here\n  displayedColumns: string[] = [\n    'orderId',\n    'buyerName',\n    'finalPrice',\n    'orderStatus',\n    'details',\n    'history',\n  ];\n\n  constructor(\n    private location: Location,\n    public loadingService: LoadingService,\n    private orderService: OrderService\n  ) {}\n\n  ngOnInit(): void {\n    this.fetchAllOrders();\n  }\n\n  fetchAllOrders(): void {\n    this.orderService\n      .fetchByLoggedInUserId()\n      .pipe(take(1))\n      .subscribe({\n        next: (res: Order[]) => {\n          this.dataSource.data = res.reverse();\n          this.orderHistory = res;\n        },\n        complete: () => console.log('Completed'),\n      });\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n  doFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  fetchColor(status: string): string {\n    switch (status) {\n      case 'DELIVERED':\n        return 'green';\n      case 'CANCELLED':\n        return 'red';\n      default:\n        return '#1f9db9';\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.scss']\n})\nexport class OrdersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>orders works!</p>\n","<div class=\"root\">\n  <div class=\"content\">\n    <div class=\"section-back\" (click)=\"goBack()\">\n      <img class=\"back-img\" src=\"assets/images/back.svg\" alt=\"\" />\n      <span class=\"back-text\">Back</span>\n    </div>\n    <div class=\"my-card\">\n      <div class=\"row\">\n        <div class=\"col-12 p-2 col-lg-6\">\n          <img [src]=\"product?.photoUrl\" style=\"width: 90%;\" />\n        </div>\n        <div class=\"col-12 col-lg-6 section-product\">\n          <div class=\"p-5\">\n            <h1 class=\"product-title\">\n              {{ product?.name }}\n            </h1>\n            <h2 class=\"product-price\">\n              <span class=\"\">{{ numberWithCommas(product) }}</span>\n            </h2>\n            <p class=\"product-description\">\n              {{ product?.description }}\n            </p>\n            <div class=\"quantity\">\n              <button class=\"quantity-btn-left\" (click)=\"decrement()\">-</button>\n              <input class=\"quantity-input\" type=\"number\" placeholder=\"1\" [(ngModel)]=\"count\"\n                onkeydown=\"return false\" />\n              <button class=\"quantity-btn-right\" (click)=\"increment()\">\n                +\n              </button>\n              <p class=\"quantity-stock\">\n                Available Stock: {{ 1000 }}\n              </p>\n            </div>\n            <div class=\"cart-buttons\">\n              <button class=\"primary-btn add-to-cart\" (click)=\"addNewItem(product)\" [disabled]=\"disabledAddCart\">\n                <span *ngIf=\"loadingService.loading\" class=\"spinner-border spinner-border-sm\"></span>\n                Add to Cart\n              </button>\n              <button class=\"secondary-btn\" [routerLink]=\"['/products/cart']\">\n                View Cart\n              </button>\n            </div>\n            <br><br><br>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Location } from '@angular/common';\nimport { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Item } from 'src/app/models/item.model';\nimport { ProductNew } from 'src/app/models/product-new';\nimport { AuthModalService } from 'src/app/services/auth-modal.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CartConfirmModalService } from 'src/app/services/cart-confirm-modal.service';\nimport { CartService } from 'src/app/services/cart.service';\nimport { EventService } from 'src/app/services/event.service';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { ProductService } from 'src/app/services/product.service';\nimport { CartItem } from 'src/app/models/cart-item';\nimport * as $ from 'jquery';\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.scss'],\n})\nexport class ProductDetailsComponent implements OnInit, AfterViewInit  {\n  count = 1;\n  productId;\n  product: ProductNew = null;\n  cartItems: CartItem[] = [];\n  disabledAddCart = false;\n\n  constructor(\n    public loadingService: LoadingService,\n    private router: Router,\n    private location: Location,\n    private productService: ProductService,\n    private route: ActivatedRoute,\n    public eventService: EventService,\n    private authService: AuthService,\n    private authModalService: AuthModalService,\n    private cartService: CartService,\n    private cartModal: CartConfirmModalService\n  ) {}\n\n  ngOnInit(): void {\n    this.productId = this.route.snapshot.paramMap.get('productId');\n    this.initializeProductDetails();\n    this.loadCardItems();\n  }\n\n  initializeProductDetails() {\n    this.productService.fetchById(this.productId).subscribe((res: ProductNew) => {\n      this.product = res;\n    }).closed;\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  increment() {\n    this.count++;\n  }\n  decrement() {\n    if (this.count <= 1) this.count = 1;\n    else this.count--;\n  }\n\n  addNewItem(product) {\n    this.disabledAddCart = true;\n    var cartItem = this.cartItems.find(p=>p.product.id == product.id);\n    if(cartItem){\n      cartItem.number += this.count;\n    }\n    else{\n      cartItem = new CartItem();\n      cartItem.product = {...product}\n      cartItem.number = this.count;\n      this.cartItems.push(cartItem);\n    }\n\n    window.localStorage.setItem(\"cart-items\", JSON.stringify(this.cartItems));\n\n    $('#trigger-update-cart').trigger('click');\n\n    setTimeout(() => {\n      this.disabledAddCart = false;\n        }, 3000);\n  }\n\n  redirectToCategory() {\n    this.eventService.categoryChanged.next(this.product.name);\n    this.router.navigateByUrl('/');\n  }\n\n  checkForAuthAndShowPopUp() {\n    if (this.authService.isAuthenticated()) return true;\n    this.authModalService.open(this.router.url);\n    return false;\n  }\n\n  loadCardItems(){\n    var data = window.localStorage.getItem(\"cart-items\");\n    if(data){\n      this.cartItems = <CartItem[]>JSON.parse(data);\n    }else{\n      this.cartItems = [];\n    }\n  }\n  \n  // badgeColor() {\n  //   if (this.product?.discountPercent <= 10) return '#FFCE03';\n  //   else if (this.product?.discountPercent <= 20) return '#FD9A01';\n  //   else if (this.product?.discountPercent <= 30) return '#FD6104';\n  //   else if (this.product?.discountPercent <= 40) return '#FF2C05';\n  //   else return '#F00505';\n  // }\n\n  numberWithCommas(product) {\n    if(product && product.price)\n      return product?.price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n\n    return \"\";\n  }\n\n  ngAfterViewInit() {\n    return;\n    $('.add-to-cart').on('click', function () {\n      var cart = $('#cart-on-menu');\n      var imgtodrag = $('.my-card').find(\"img\").eq(0);\n      if (imgtodrag) {\n          var imgclone = imgtodrag.clone()\n              .offset({\n              top: imgtodrag.offset().top,\n              left: imgtodrag.offset().left\n          })\n              .css({\n              'opacity': '0.5',\n                  'position': 'absolute',\n                  'height': '150px',\n                  'width': '150px',\n                  'z-index': '100'\n          })\n              .appendTo($('body'))\n              .animate({\n              'top': cart.offset().top + 10,\n                  'left': cart.offset().left + 10,\n                  'width': 75,\n                  'height': 75\n          }, 1000, 'easeInOutExpo');\n\n          setTimeout(function () {\n              cart.effect(\"shake\", {\n                  times: 2\n              }, 200);\n          }, 1500);\n\n          imgclone.animate({\n              'width': 0,\n                  'height': 0\n          }, function () {\n              $(this).detach()\n          });\n      }\n  });\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ProductNew } from 'src/app/models/product-new';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-product-card',\n  templateUrl: './product-card.component.html',\n  styleUrls: ['./product-card.component.scss'],\n})\nexport class ProductCardComponent implements OnInit {\n  @Input() product: ProductNew;\n\n  constructor(public loadingService: LoadingService,\n    private router: Router) { }\n\n  ngOnInit(): void { }\n\n  moveToDetail(productId) {\n    this.router.navigate([\"./products/detail/\" + productId])\n  }\n\n}\n","<div class=\"card-product\" (click)=\"moveToDetail(product.id)\">\n  <div class=\"product-card\"><img [src]=\"product.photoUrl\" style=\"height: 250px; width: 100%;\" /></div>\n  <div class=\"product-name\">{{product.name}}</div>\n  <div class=\"product-price\">HOTLINE: 0907664748 - 0903531305</div>\n</div>","<div class=\"category-items\">\n  <app-product-card class=\"card-product {{isMobile?'card-product-mobile':''}}\" *ngFor=\"let item of products\" [product]=\"item\">\n  </app-product-card>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { ProductNew } from 'src/app/models/product-new';\nimport { DeviceDetectorService } from 'ngx-device-detector';\n\n@Component({\n  selector: 'app-product-grid',\n  templateUrl: './product-grid.component.html',\n  styleUrls: ['./product-grid.component.scss'],\n})\nexport class ProductGridComponent implements OnInit {\n  @Input() products : ProductNew[];\n\n  isMobile = this.deviceDetectorService.isMobile();\n  constructor(private deviceDetectorService: DeviceDetectorService) {}\n\n  ngOnInit(): void {}\n\n}\n","<div style=\"padding-top: 30px; text-align: center\">\n  <div *ngIf=\"!categoryId\">\n    <div class=\"clearfix\" style=\"margin-top: 50px\">\n      <div class=\"wpb_column column_container col-sm-12\">\n        <div class=\"vc_column-inner\">\n          <div class=\"wpb_wrapper\">\n            <h2 class=\"category\">NHỮNG LÝ DO BẠN NÊN CHỌN ENVI SPACE</h2>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"clearfix\">\n      <div style=\"margin-bottom: 10px\">\n        <div class=\"box column_container col-sm-4 col-lg-4\">\n          <div class=\"vc_column-inner\">\n            <div class=\"wpb_wrapper\">\n              <div class=\"wpb_single_image wpb_content_element vc_align_center\">\n                <figure class=\"wpb_wrapper vc_figure\">\n                  <div class=\"vc_single_image-wrapper vc_box_border_circle\">\n                    <img width=\"80\" height=\"80\" src=\"assets/images/chooseus1.jpg\"\n                      class=\"vc_single_image-img attachment-full\" alt=\"\" />\n                  </div>\n                </figure>\n              </div>\n              <div class=\"wpb_text_column wpb_content_element\">\n                <div class=\"wpb_wrapper\">\n                  <p style=\"text-align: center\">\n                    <span style=\"font-size: 15pt; color: green\"><strong><span>ĐỘI NGŨ TƯ VẤN THIẾT KẾ CHUYÊN NGHIỆP -\n                          TẬN\n                          TÂM</span></strong></span>\n                  </p>\n                  <p style=\"text-align: center; font-size: 12pt\">\n                    Hiểu rõ các yêu cầu và mong muốn của khách hàng để đưa ra những\n                    thiết kế ngôi nhà của mình phù hợp với nhu cầu tài chính và sở\n                    thích riêng của khách hàng.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"box column_container col-sm-4 col-lg-4\">\n          <div class=\"vc_column-inner\">\n            <div class=\"wpb_wrapper\">\n              <div class=\"wpb_single_image wpb_content_element vc_align_center\">\n                <figure class=\"wpb_wrapper vc_figure\">\n                  <div class=\"vc_single_image-wrapper vc_box_border_circle\">\n                    <img width=\"70\" height=\"70\" src=\"assets/images/chooseus2.jpg\"\n                      class=\"vc_single_image-img attachment-full\" alt=\"\" />\n                  </div>\n                </figure>\n              </div>\n              <div class=\"wpb_text_column wpb_content_element\">\n                <div class=\"wpb_wrapper\">\n                  <p style=\"text-align: center\">\n                    <span style=\"font-size: 15pt; color: green\"><strong><span>TƯ VẤN - THIẾT KẾ MIỄN\n                          PHÍ</span></strong></span>\n                  </p>\n                  <p style=\"text-align: center; font-size: 12pt\">\n                    Gói dịch vụ trọn gói \"chìa khoá trao tay\" của chúng tôi sẽ miễn\n                    phí thiết kế cho quý khách và nhiều hỗ trợ tư vấn khác.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"box column_container col-sm-4 col-lg-4\">\n          <div class=\"vc_column-inner\">\n            <div class=\"wpb_wrapper\">\n              <div class=\"wpb_single_image wpb_content_element vc_align_center\">\n                <figure class=\"wpb_wrapper vc_figure\">\n                  <div class=\"vc_single_image-wrapper vc_box_border_circle\">\n                    <img width=\"80\" height=\"80\" src=\"assets/images/chooseus3.jpg\"\n                      class=\"vc_single_image-img attachment-full\" alt=\"\" />\n                  </div>\n                </figure>\n              </div>\n              <div class=\"wpb_text_column wpb_content_element\">\n                <div class=\"wpb_wrapper\">\n                  <p style=\"text-align: center\">\n                    <span style=\"font-size: 15pt; color: green\"><strong><span>GIÁ CẢ CẠNH TRANH</span></strong></span>\n                  </p>\n                  <p style=\"text-align: center; font-size: 12pt\">\n                    Chúng tôi có xưởng sản xuất nên giá của các sản phẩm chúng tôi\n                    bảo đảm cho quý khách luôn có mức giá tốt nhất trên thị trường.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div *ngFor=\"let category of categories\" style=\"margin-bottom: 80px\">\n    <span>\n      <container-element [ngSwitch]=\"category.id\">\n        <h2 class=\"category\" *ngSwitchCase=\"0\">\n          <span style=\"cursor: pointer\" (click)=\"moveTo(category.id)\">TƯ VẤN THIẾT KẾ</span><span *ngIf=\"categoryType\">\n            » {{ categoryType.name }}</span>\n        </h2>\n        <h2 class=\"category\" *ngSwitchCase=\"1\">\n          <span style=\"cursor: pointer\" (click)=\"moveTo(category.id)\">SƠN</span><span *ngIf=\"categoryType\"> » {{\n            categoryType.name }}</span>\n        </h2>\n        <h2 class=\"category\" *ngSwitchCase=\"2\">\n          <span style=\"cursor: pointer\" (click)=\"moveTo(category.id)\">GẠCH</span><span *ngIf=\"categoryType\"> » {{\n            categoryType.name }}</span>\n        </h2>\n        <h2 class=\"category\" *ngSwitchDefault>\n          <span style=\"cursor: pointer\" (click)=\"moveTo(category.id)\">VẬT LIỆU XÂY DỰNG</span><span\n            *ngIf=\"categoryType\"> » {{ categoryType.name }}</span>\n        </h2>\n      </container-element>\n    </span>\n    <app-product-grid class=\"category-items\" [products]=\"findProducts(category.id)\">\n    </app-product-grid>\n    <div *ngIf=\"!categoryId\">\n      <p style=\"\n          font-style: italic;\n          font-size: 15px;\n          margin-bottom: 40px;\n          text-align: right;\n          padding-right: 8%;\n        \">\n        <a class=\"more-items\" (click)=\"moveTo(category.id)\">>> more</a>\n      </p>\n    </div>\n  </div>\n\n  <div style=\"margin: 50px\">\n    <div *ngIf=\"!categoryId\" class=\"clearfix\" style=\"margin: 20px\">\n      <div class=\"wpb_column column_container col-sm-12\">\n        <div class=\"vc_column-inner\">\n          <div class=\"wpb_wrapper\">\n            <h2 class=\"category\">SẢN PHẨM & DỊCH VỤ</h2>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div data-vc-full-width=\"true\" data-vc-full-width-init=\"true\"\n      class=\"vc_row wpb_row vc_custom_1594625003021 vc_row-has-fill\" style=\"\n        position: relative;\n        left: 0px;\n        box-sizing: border-box;\n        padding-left: 0px;\n        padding-right: 0px;\n      \">\n      <div class=\"wpb_text_column wpb_content_element\">\n        <div class=\"wpb_column column_container col-sm-12\">\n          <div class=\"vc_column-inner\">\n            <div class=\"wpb_wrapper\">\n              <div class=\"wpb_text_column wpb_content_element\">\n                <div class=\"wpb_wrapper\">\n                  <h4 class=\"vc_custom_heading vc_custom_1581733826297\" style=\"text-align: center\">\n                    <span><strong><span style=\"color: white; font-size: 17pt\">TƯ VẤN &#8211; BÁO GIÁ &#8211; GIẢI ĐÁP\n                          THẮC MẮC</span></strong></span>\n                  </h4>\n                  <h4 class=\"vc_custom_heading vc_custom_1581705695298\" style=\"text-align: center\">\n                    <span><strong><span style=\"color: white; font-size: 17pt\">THEO YÊU CẦU CỦA KHÁCH\n                          HÀNG</span></strong></span>\n                  </h4>\n                </div>\n              </div>\n              <div class=\"\n                  vc_separator\n                  wpb_content_element\n                  vc_separator_align_center\n                  vc_sep_width_30\n                  vc_sep_dotted\n                  vc_sep_pos_align_center\n                  vc_separator_no_text\n                  vc_sep_color_white\n                \">\n                <span class=\"vc_sep_holder vc_sep_holder_l\"><span class=\"vc_sep_line\"></span></span><span\n                  class=\"vc_sep_holder vc_sep_holder_r\"><span class=\"vc_sep_line\"></span></span>\n              </div>\n              <div class=\"wpb_text_column wpb_content_element\">\n                <div class=\"wpb_wrapper\">\n                  <div class=\"wpb_text_column wpb_content_element\">\n                    <div class=\"wpb_wrapper\">\n                      <p style=\"text-align: center\">\n                        <span>\n                          <span style=\"color: white; font-size: 15pt\">Hãy liên hệ theo hotline:\n                            <span>\n                              <a style=\"color: chartreuse\" class=\"text-is-phone-number\">0907664748 - 0903531305</a>\n                            </span>\n                          </span>\n                        </span>\n                      </p>\n                    </div>\n                  </div>\n                  <div class=\"wpb_text_column wpb_content_element\">\n                    <div class=\"wpb_wrapper\">\n                      <p style=\"text-align: center\">\n                        <span><span style=\"color: white; font-size: 15pt\">Hoặc gửi email chi tiết đến chúng tôi tại\n                            <strong>info@envispace.vn</strong></span></span>\n                      </p>\n                      <p style=\"text-align: center\">\n                        <span><span style=\"color: white; font-size: 15pt\">ENVI SPACE sẽ liên hệ lại Quý khách trong vòng\n                            30 phút.</span></span>\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AuthModalService } from 'src/app/services/auth-modal.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CartConfirmModalService } from 'src/app/services/cart-confirm-modal.service';\nimport { CartService } from 'src/app/services/cart.service';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { ProductService } from 'src/app/services/product.service';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { CategoryNew } from 'src/app/models/category-new';\nimport { ProductNew } from 'src/app/models/product-new';\nimport { CategoryType } from 'src/app/models/category-type';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.scss'],\n})\nexport class ProductListComponent implements OnInit {\n  productList: ProductNew[] = [];\n  categories: CategoryNew[];\n  category: CategoryNew;\n  categoryType: CategoryType;\n  categoryId?: string;\n  typeId?: string;\n  pageIndex = 0;\n  pageSize = 10;\n\n  constructor(\n    public loadingService: LoadingService,\n    private categoryService: CategoryService,\n    private productService: ProductService,\n    private modalService: AuthModalService,\n    private authService: AuthService,\n    private router: Router,\n    private cartService: CartService,\n    private cartConfirmModal: CartConfirmModalService,\n    private activatedRoute: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.paramMap.subscribe(params => {\n      if (params.has('categoryId')) {\n        this.categoryId = params.get('categoryId');\n      }\n      if (params.has('typeId')) {\n        this.typeId = params.get('typeId');\n      }\n\n      this.initProducts();\n      this.getCategories();\n      this.getTypes();\n    });\n\n  }\n\n  initProducts() {\n    if (this.categoryId && this.typeId) {\n      this.fetchProductsByType();\n    } else if (this.categoryId) {\n      this.fetchProductsByCategory();\n    } else {\n      this.fetchAllProducts();\n    }\n  }\n\n  getCategories() {\n    this.categoryService.fetchAllCategories().subscribe((res) => {\n      this.categories = <CategoryNew[]>res;\n      if (this.categoryId) {\n        this.categories = this.categories.filter(p => p.id == this.categoryId);\n      }\n    });\n  }\n\n  getTypes() {\n    if (this.categoryId && this.typeId) {\n      this.categoryService.getTypesByCategory(this.categoryId).subscribe((res) => {\n        var types = <CategoryType[]>res;\n        this.categoryType = types.find(p => p.id == this.typeId);\n      });\n    }\n  }\n\n  findProducts(categoryId) {\n    if (this.categoryId) {\n      return this.productList;\n    }\n    let result = [];\n\n    if (this.productList && this.productList.length > 0) {\n      for (var i = 0; i < this.productList.length && result.length < 8; i++) {\n        if (this.productList[i].categoryId == categoryId) {\n          result.push(this.productList[i]);\n        }\n      }\n    }\n\n    return result;\n  }\n\n  addToCart(itemId) {\n    let item = {\n      productId: itemId,\n      quantity: 1,\n    };\n    if (this.checkForAuthAndShowPopUp()) {\n      this.loadingService.enableLoading();\n      this.cartService.addToCart(item).subscribe((res) => {\n        this.cartConfirmModal.open();\n        this.loadingService.disableLoading();\n      });\n    }\n  }\n\n  checkForAuthAndShowPopUp() {\n    if (this.authService.isAuthenticated()) return true;\n    this.modalService.open(this.router.url);\n    return false;\n  }\n\n  fetchProductsByCategory() {\n    const pageOption = {\n      size: 9999,\n      page: this.pageIndex\n    }\n    this.loadingService.enableLoading();\n    this.productService.findByCategoryId(this.categoryId, pageOption).subscribe((res: any) => {\n      this.updateProductionList(res);\n      this.loadingService.disableLoading();\n    });\n  }\n\n  fetchProductsByType() {\n    const pageOption = {\n      size: 9999,\n      page: this.pageIndex\n    }\n    this.loadingService.enableLoading();\n    this.productService.findByCategoryType(this.typeId, pageOption).subscribe((res: any) => {\n      this.updateProductionList(res);\n      this.loadingService.disableLoading();\n    });\n  }\n\n  fetchAllProducts() {\n    const pageOption = {\n      size: 9999,\n      page: this.pageIndex\n    }\n    this.loadingService.enableLoading();\n    this.productService.fetchAllProducts(pageOption).subscribe((res: any) => {\n      this.updateProductionList(res);\n      this.loadingService.disableLoading();\n    });\n  }\n\n  updateProductionList(res) {\n    this.productList = <ProductNew[]>res.content;\n  }\n\n  moveTo(categoryId) {\n    this.router.navigate([\"./products/\" + categoryId])\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss']\n})\nexport class ProductsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"allButFooter\">\n  <app-navigation></app-navigation>\n  <!-- <div class=\"backdrop\"></div> -->\n  <div class=\"backdrop\"></div>\n  <div class=\"content\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n\n<app-cart-confirm-modal></app-cart-confirm-modal>\n<app-footer></app-footer>\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthAccessGuard implements CanActivate {\n  constructor(private authServie: AuthService, private router: Router) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    if (this.authServie.isAuthenticated()) {\n      this.router.navigateByUrl('/');\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthModalService } from '../services/auth-modal.service';\nimport { AuthService } from '../services/auth.service';\nimport { EventService } from '../services/event.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authServie: AuthService,\n    private router: Router,\n    private modalAuthService: AuthModalService,\n  ) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    if (!this.authServie.isAuthenticated()) {\n      this.modalAuthService.open(state.url);\n      // this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n      return false;\n    }\n    return true;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatTableModule,\n    MatSortModule, // Required for Sorting table\n    MatPaginatorModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatProgressSpinnerModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n  ],\n  exports: [\n    MatDialogModule,\n    MatButtonModule,\n    MatTableModule,\n    MatSortModule, // Required for Sorting table\n    MatPaginatorModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatProgressSpinnerModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n  ],\n})\nexport class MaterialCustomModule { }\n","import { ProductNew } from './product-new';\n\nexport class CartItem {\n  number: number;\n  product: ProductNew;\n}\n","export class CategoryType {\n  id: string;\n  name: string;\n  categoryId: string=\"\";\n  description: string=\"\";\n}\n","export class News {\n  id: string;\n  title: string;\n  content: string;\n  newsType: number;\n  imagesUrl?: string[];\n  datetime?: Date;\n}\n","export class ProductNew {\n  id: string;\n  name?: string;\n  description?: string;\n  photoUrl?: string;\n  price: number;\n  categoryId?: string=\"\";\n  typeId?: string=\"\";\n  datetime?: string;\n}\n","export enum ProductStatus {\n  ENABLED = 'Enabled',\n  DISABLED = 'Disabled',\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable, ErrorHandler } from '@angular/core';\nimport { GlobalErrorModalService } from '../services/global-error-modal.service';\nimport { LoadingService } from '../services/loading.service';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Injectable()\nexport class GlobalErrorHandler implements ErrorHandler {\n  constructor(\n    private modalService: GlobalErrorModalService,\n    private loadingService: LoadingService,\n    private authService: AuthService\n  ) {}\n\n  handleError(error: Error) {\n    console.log(error);\n    this.loadingService.disableLoading();\n    // Only shows error which are not related to http\n    if (!(error instanceof HttpErrorResponse)) {\n      this.modalService.open(error);\n      if((<HttpErrorResponse>error).status == 401){\n        this.authService.logout();\n      }\n    }else{\n      if(error.status && error.status == 401){\n        this.authService.logout();\n      }\n    }\n  }\n}\n","import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { GlobalErrorModalService } from '../services/global-error-modal.service';\n\n@Injectable()\nexport class HttpErrorInterceptor implements HttpInterceptor {\n  constructor(private modalService: GlobalErrorModalService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    return next.handle(request).pipe(\n      catchError((error: HttpErrorResponse) => {\n        if (error?.error?.message !== 'FieldException') // Ignore for Validation error\n          this.handleErrorResponse(error);\n        return throwError(error);\n      })\n    );\n  }\n\n  handleErrorResponse(error: HttpErrorResponse) {\n    if (error instanceof HttpErrorResponse) {\n      if (error.error instanceof ErrorEvent) {\n        console.error('Error Event');\n      } else {\n        console.log(`error status : ${error.status} ${error.statusText}`);\n        switch (error.status) {\n          case 404:\n            this.modalService.open('Error 404: Service not ready');\n            break;\n          case 403:\n            this.modalService.open('Error 403: Access Denied');\n            break;\n          case 500:\n            this.modalService.open(\n              \"Error 500: Server couldn't process the request, Retry\"\n            );\n            break;\n          default:\n            this.modalService.open(`Error ${error.status} Something went wrong while connecting to server`)\n        }\n      }\n    } else {\n      console.error('some thing else happened');\n    }\n  }\n}\n","import { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { ErrorHandler } from \"@angular/core\";\nimport { JWT_OPTIONS } from \"@auth0/angular-jwt\";\nimport { GlobalErrorHandler } from \"./global-error-handler\";\nimport { HttpErrorInterceptor } from \"./http-error.interceptor\";\nimport { JwtTokenInterceptor } from \"./jwt-token.interceptor\";\n\nexport const httpInterceptors = [\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: JwtTokenInterceptor,\n    multi: true,\n  },\n  {\n    provide: JWT_OPTIONS,\n    useValue: JWT_OPTIONS,\n  },\n  {\n    provide: ErrorHandler,\n    useClass: GlobalErrorHandler,\n  },\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: HttpErrorInterceptor,\n    multi: true,\n  },\n  // Breaks Code for now \n  // {\n  //   provide: HTTP_INTERCEPTORS,\n  //   useClass: CorsInterceptor,\n  //   multi: true,\n  // },\n];","import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class JwtTokenInterceptor implements HttpInterceptor {\n  \n  constructor(private authService: AuthService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    // Prevent auth token in specific URL\n    if (request.headers.get('skip')) {\n      request = request.clone({\n        headers: request.headers.delete('skip'),\n      });\n      return next.handle(request);\n    }\n\n    let authReq = request;\n    const token = this.authService.fetchFromSessionStorage()?.token;\n    // Null will still add a token\n    if (token !== undefined)\n      authReq = request.clone({\n        headers: request.headers.append('Authorization', `Bearer ${token}`)\n      });\n    return next.handle(authReq);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccessDeniedModalService {\n  constructor() {}\n\n  private display: BehaviorSubject<'open' | 'close'> = new BehaviorSubject(\n    'close'\n  );\n\n  watch(): Observable<'open' | 'close'> {\n    return this.display.asObservable();\n  }\n\n  open() {\n    this.display.next('open');\n  }\n\n  close() {\n    this.display.next('close');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthModalService {\n\n  redirectUrl;\n  constructor(private route: ActivatedRoute) {}\n\n  private display: BehaviorSubject<'open' | 'close'> = new BehaviorSubject(\n    'close'\n  );\n\n  watch(): Observable<'open' | 'close'> {\n    return this.display.asObservable();\n  }\n\n  open(url) {\n    this.redirectUrl = url || '/'\n    this.display.next('open');\n  }\n\n  close() {\n    this.display.next('close');\n    this.redirectUrl = '';\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../models/user.model';\nimport { EventService } from './event.service';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  authServiceUrl = `${environment.protocol}${environment.applicationUrl}`;\n  // authServiceUrl = `http://localhost:9100/auth`;\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private jwtHelper: JwtHelperService,\n    private eventServie: EventService\n  ) {}\n\n  login(formData) {\n    return this.http\n      .post(`${this.authServiceUrl}/login`, formData)\n      .pipe(tap((user: User) => {\n        this.saveToSessionStorage(user);\n        this.eventServie.loggedInUser.next(user);\n      }));\n  }\n\n  saveToSessionStorage(user: User) {\n    sessionStorage.setItem('user', JSON.stringify(user));\n  }\n\n  fetchFromSessionStorage(): User {\n    return JSON.parse(sessionStorage.getItem('user'));\n  }\n\n  logout(): void {\n    sessionStorage.clear();\n    localStorage.clear();\n    this.eventServie.loggedInUser.next(null);\n    this.router.navigate(['/']);\n  }\n\n  redirectIfLoggedIn() {\n    if (this.fetchFromSessionStorage()?.token)\n      this.router.navigate(['/']);\n  }\n\n  isAuthenticated(): boolean {\n    const token = this.fetchFromSessionStorage()?.token;\n    return token != undefined && token != \"\" && token != null;\n  }\n\n  token() {\n    return this.fetchFromSessionStorage()?.token;\n  }\n\n  requestSecretQuestion (username) {\n    return this.http.get(`${this.authServiceUrl}/forgotpassword/${username}`);\n  }\n\n  requestPasswordReset (formData) {\n    return this.http.put(`${this.authServiceUrl}/forgotpassword`, formData);\n  }\n\n  getRole() {\n    return this.fetchFromSessionStorage()?.role;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\n@Injectable()\nexport class BaseRestService {\n\n  protected headers: HttpHeaders;\n\n  constructor(protected http: HttpClient) {\n    this.headers = new HttpHeaders({\n      \"Content-Type\": \"application/json; charset=UTF-8\"\n    });\n  }\n\n  protected removeEmptyPropertyFromObject(inputObject: Object): any {\n    return Object.keys(inputObject).reduce((outputObject, key) => {\n      const inputValue = inputObject[key];\n\n      if (\n        inputValue !== null &&\n        inputValue !== undefined &&\n        inputValue !== '' &&\n        (!(inputValue instanceof Array) || inputValue.length > 0)\n      ) {\n        outputObject[key] = inputValue;\n      }\n\n      return outputObject;\n    }, {});\n  }\n\n  protected buildFormDataFromObject(inputObject): FormData {\n    return Object.keys(inputObject).reduce((params: FormData, key: string) => {\n      if (inputObject[key] != null && inputObject[key] != undefined) {\n        params.set(key, inputObject[key]);\n      }\n      return params;\n    }, new FormData());\n  }\n\n  protected buildQueryString(inputObjects): string {\n    return Object.keys(this.removeEmptyPropertyFromObject(inputObjects))\n      .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(inputObjects[key])}`)\n      .join('&');\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartConfirmModalService {\n  constructor() {}\n\n  private display: BehaviorSubject<'open' | 'close'> = new BehaviorSubject(\n    'close'\n  );\n\n  watch(): Observable<'open' | 'close'> {\n    return this.display.asObservable();\n  }\n\n  open() {\n    this.display.next('open');\n  }\n\n  close() {\n    this.display.next('close');\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Item } from '../models/item.model';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  cartServiceUrl = `${environment.protocol}${environment.applicationUrl}/cart`;\n\n  constructor(private http: HttpClient, private authService: AuthService) { }\n\n  addToCart(item: Item) {\n    return this.http.put(`${this.cartServiceUrl}/${this.authService.fetchFromSessionStorage()?.userId}`, item);\n  }\n\n  fetchCartByUserId() {\n    return this.http.get(`${this.cartServiceUrl}/user/${this.authService.fetchFromSessionStorage()?.userId}`);\n  }\n\n  removeItemFromCart(productId) {\n    return this.http.delete(`${this.cartServiceUrl}/delete/${productId}/${this.authService.fetchFromSessionStorage()?.userId}`)\n  }\n\n  checkout(data) {\n    return this.http.post(`${this.cartServiceUrl}/manualcheckout/${this.authService.fetchFromSessionStorage()?.userId}`, data)\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { CategoryType } from 'src/app/models/category-type';\nimport { Observable } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryService {\n  categoryServiceUrl = `${environment.protocol}${environment.applicationUrl}/categories`;\n\n  constructor(private http: HttpClient,\n    private authService: AuthService) { }\n\n  fetchAllCategories() {\n    return this.http.get(this.categoryServiceUrl);\n  }\n\n  fetchAllTypes() {\n    return this.http.get(this.categoryServiceUrl + \"/types\");\n  }\n\n  getTypesByCategory(categoryId): Observable<CategoryType[]> {\n    return this.http.get<CategoryType[]>(this.categoryServiceUrl + \"/\" + categoryId);\n  }\n\n  createType(data) {\n    return this.http.post(this.categoryServiceUrl, data, { headers: { 'token': this.authService.token() } });\n  }\n\n  updateType(data) {\n    return this.http.put(this.categoryServiceUrl + \"/\" + data.id, data, { headers: { 'token': this.authService.token() } });\n  }\n\n  deleteType(typeId) {\n    return this.http.delete(this.categoryServiceUrl + \"/type/\" + typeId, { headers: { 'token': this.authService.token() } });\n  }\n\n  fetchById(id) {\n    return this.http.get(`${this.categoryServiceUrl}/${id}`);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeliveryHistoryService {\n  orderServiceUrl = `${environment.protocol}${environment.applicationUrl}/delivery`;\n\n  constructor(private http: HttpClient) {}\n\n  fetchDeliveryByOrderId(orderId) {\n    return this.http.get(`${this.orderServiceUrl}/${orderId}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { User } from '../models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n\n  public resetPasswordData = new BehaviorSubject<any>(null);\n  public loggedInUser = new BehaviorSubject<User>(null);\n  public categoryChanged = new BehaviorSubject<String>(null);\n  public searchQueryChanged = new BehaviorSubject<String>(null);\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FormSubmitModalService {\n  url: string;\n  message: string;\n  private display: BehaviorSubject<'open' | 'close'> = new BehaviorSubject(\n    'close'\n  );\n\n  watch(): Observable<'open' | 'close'> {\n    return this.display.asObservable();\n  }\n\n  open(message, url) {\n    this.message = message;\n    this.url = url;\n    this.display.next('open');\n  }\n\n  close() {\n    this.display.next('close');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalErrorModalService {\n\n  error;\n\n  constructor() {}\n\n  private display: BehaviorSubject<'open' | 'close'> = new BehaviorSubject(\n    'close'\n  );\n\n  watch(): Observable<'open' | 'close'> {\n    return this.display.asObservable();\n  }\n\n  open(error) {\n    this.error = error;\n    this.display.next('open');\n  }\n\n  close() {\n    this.error = null;\n    this.display.next('close');\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n\n  public loading = false;\n\n  constructor() {}\n\n  enableLoading() {\n    this.loading = true;\n  }\n\n  disableLoading() {\n    this.loading = false;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ManageUserService {\n  authServiceUrl = `${environment.protocol}${environment.applicationUrl}`;\n\n  constructor(private http: HttpClient) {}\n\n  fetchAllUsers() {\n    return this.http.get(`${this.authServiceUrl}/register`);\n  }\n\n  updateUser(formData) {\n    return this.http.put(`${this.authServiceUrl}/register`, formData);\n  }\n\n  addUser(formData) {\n    return this.http.post(`${this.authServiceUrl}/register`, formData);\n  }\n\n  fetchById(id) {\n    return this.http.get(`${this.authServiceUrl}/register/${id}`);\n  }\n\n  fetchLoggedInUserForEdit() {\n    return this.http.get(`${this.authServiceUrl}/me`);\n  }\n\n  updateLoggedInUser(data) {\n    return this.http.get(`${this.authServiceUrl}/me`, data);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { News } from 'src/app/models/news';\nimport { Observable } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NewsService {\n  serviceUrl = `${environment.protocol}${environment.applicationUrl}/news`;\n\n  constructor(private http: HttpClient,\n    private authService: AuthService) { }\n\n  fetchAll() {\n    return this.http.get(this.serviceUrl);\n  }\n\n  fetchByType(newsType: number) {\n    return this.http.get(this.serviceUrl + \"/type/\" + newsType);\n  }\n\n  get(id): Observable<News> {\n    return this.http.get<News>(this.serviceUrl + \"/\" + id);\n  }\n\n  update(data) {\n    return this.http.put(this.serviceUrl + \"/\" + data.id, data, { headers: { 'token': this.authService.token() } });\n  }\n\n  create(data) {\n    return this.http.post(this.serviceUrl, data, { headers: { 'token': this.authService.token() } });\n    //return this.http.post(this.serviceUrl, JSON.stringify(data),\n    //{headers:{'token': this.authService.token()});\n  }\n\n  delete(id) {\n    return this.http.delete(this.serviceUrl + \"/\" + id, { headers: { 'token': this.authService.token() } });\n  }\n\n  fetchById(id) {\n    return this.http.get(`${this.serviceUrl}/${id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderCancelModalService {\n\n  constructor() {}\n\n  private display: BehaviorSubject<'open' | 'close' | 'cancel-order'> = new BehaviorSubject(\n    'close'\n  );\n\n  watch(): Observable<'open' | 'close' | 'cancel-order'> {\n    return this.display.asObservable();\n  }\n\n  open() {\n    this.display.next('open');\n  }\n\n  close() {\n    this.display.next('close');\n  }\n\n  cancelOrder() {\n    this.display.next('cancel-order');\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { UpdateOrderStatus } from '../models/update-order-status.model';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderService {\n  orderServiceUrl = `${environment.protocol}${environment.applicationUrl}/orders`;\n\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  updateOrderStatus(data: UpdateOrderStatus) {\n    return this.http.post(`${this.orderServiceUrl}`, data);\n  }\n\n  fetchOrder() {\n    return this.http.get(`${this.orderServiceUrl}`);\n  }\n\n  fetchById(id) {\n    return this.http.get(`${this.orderServiceUrl}/${id}`);\n  }\n\n  fetchByLoggedInUserId() {\n    return this.fetchByUserId(\n      this.authService.fetchFromSessionStorage()?.userId\n    );\n  }\n\n  fetchByUserId(userId) {\n    return this.http.get(`${this.orderServiceUrl}/user/${userId}`);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { BaseRestService } from './base-rest.service';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService extends BaseRestService {\n  productServiceUrl = `${environment.protocol}${environment.applicationUrl}/products`;\n\n  constructor(http: HttpClient,\n    private authService: AuthService) { \n      super(http);\n    }\n\n  fetchAllProducts(pageParams: any): Observable<any> {\n    const options = {\n      params: this.removeEmptyPropertyFromObject(pageParams)\n    }\n    return this.http.get(this.productServiceUrl, options);\n  }\n\n  findByName(filter: string, pageParams: any): Observable<any> {\n    const options = {\n      params: this.removeEmptyPropertyFromObject(pageParams)\n    }\n    return this.http.get(`${this.productServiceUrl}?filter=${filter}`, options);\n  }\n\n  findByCategoryId(categoryId, pageParams: any): Observable<any> {\n    const options = {\n      params: this.removeEmptyPropertyFromObject(pageParams)\n    }\n    return this.http.get(`${this.productServiceUrl}/category/${categoryId}`, options);\n  }\n\n  findByCategoryType(typeId, pageParams: any): Observable<any> {\n    const options = {\n      params: this.removeEmptyPropertyFromObject(pageParams)\n    }\n    return this.http.get(`${this.productServiceUrl}/type/${typeId}`, options);\n  }\n\n  fetchById(productId) {\n    return this.http.get(`${this.productServiceUrl}/${productId}`);\n  }\n\n  addProduct(product) {\n    return this.http.post(`${this.productServiceUrl}`, product, {headers:{'token': this.authService.token()}});\n  }\n\n  updateProduct(productId, product) {\n    return this.http.put(`${this.productServiceUrl}/${product.id}`, product, {headers:{'token': this.authService.token()}});\n  }\n\n  delete(id) {\n    return this.http.delete(this.productServiceUrl+\"/\"+id, {headers:{'token': this.authService.token()}});\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UpdateStatusModalService {\n  product;\n  private display: BehaviorSubject<'open' | 'close'> = new BehaviorSubject(\n    'close'\n  );\n\n  watch(): Observable<'open' | 'close'> {\n    return this.display.asObservable();\n  }\n\n  open(product) {\n    this.product = product;\n    this.display.next('open');\n  }\n\n  close() {\n    this.display.next('close');\n  }\n}\n","<ng-container *ngIf=\"display$ | async as display\">\n  <section [class.open]=\"display === 'open'\" (click)=\"close()\">\n    <div (click)=\"$event.stopPropagation()\">\n      <h1>Access Denied</h1>\n      <p>You are not authorized to access this page</p>\n      <hr>\n      <div class=\"actions\">\n        <div class=\"other\">\n          <button class=\"custom-btn cancel\" (click)=\"close()\">Go Back</button>\n        </div>\n      </div>\n    </div>\n  </section>\n</ng-container>\n","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AccessDeniedModalService } from 'src/app/services/access-denied-modal.service';\n\n@Component({\n  selector: 'app-access-denied-modal',\n  templateUrl: './access-denied-modal.component.html',\n  styleUrls: ['./access-denied-modal.component.scss'],\n})\nexport class AccessDeniedModalComponent implements OnInit {\n  display$: Observable<'open' | 'close'>;\n\n  constructor(\n    private modalService: AccessDeniedModalService,\n    private location: Location,\n    private router: Router,\n  ) {}\n\n  ngOnInit() {\n    this.display$ = this.modalService.watch();\n  }\n\n  close() {\n    this.router.navigateByUrl('/')\n    this.modalService.close();\n  }\n\n  goBack() {\n    this.location.back();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-access-denied',\n  templateUrl: './access-denied.component.html',\n  styleUrls: ['./access-denied.component.scss'],\n})\nexport class AccessDeniedComponent implements OnInit {\n  returnUrl;\n  constructor(private route: ActivatedRoute, private router: Router) {}\n\n  ngOnInit(): void {\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  previousPage() {\n    console.log('Clicked');\n    console.log(this.returnUrl);\n    \n    this.router.navigateByUrl(this.returnUrl);\n  }\n}\n","<div class=\"parent\">\n  <div class=\"item\">\n    <h1>403</h1> <br><br>\n    <h2>Access Denied</h2>\n    <p>You are not authorized to access this page</p>\n    <hr />\n    <p>Go back to <a (click)=\"previousPage()\">previous Page</a></p>\n  </div>\n</div>\n","<ng-container *ngIf=\"display$ | async as display\">\n  <section [class.open]=\"display === 'open'\" (click)=\"close()\">\n    <div (click)=\"$event.stopPropagation()\">\n      <h1>You are currently not logged In</h1>\n      <p>To access your cart or other functionalities, you will have to login to the application.</p>\n      <hr>\n      <div class=\"actions\">\n        <div class=\"auth\">\n          <button class=\"custom-btn\" (click)=\"goTo('/login')\">Login</button>\n          <button class=\"custom-btn\" (click)=\"goTo('/register')\">Register</button>\n        </div>\n        <div class=\"other\">\n          <button class=\"custom-btn cancel\" (click)=\"close()\">Cancel</button>\n        </div>\n      </div>\n    </div>\n  </section>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthModalService } from 'src/app/services/auth-modal.service';\n\n@Component({\n  selector: 'app-auth-modal',\n  templateUrl: './auth-modal.component.html',\n  styleUrls: ['./auth-modal.component.scss'],\n})\nexport class AuthModalComponent implements OnInit {\n  display$: Observable<'open' | 'close'>;\n\n  constructor(private modalService: AuthModalService, private router: Router) {}\n\n  ngOnInit() {\n    this.display$ = this.modalService.watch();\n  }\n\n  close() {\n    this.modalService.close();\n  }\n\n  goTo(path) {\n    this.router.navigate([path], { queryParams: { returnUrl: this.modalService.redirectUrl }});\n    this.close();\n  }\n}\n","<ng-container *ngIf=\"display$ | async as display\">\n  <section [class.open]=\"display === 'open'\" (click)=\"close()\">\n    <div (click)=\"$event.stopPropagation()\">\n      <h1>Item Added to Cart</h1>\n      <p>Thank You.</p>\n      <hr>\n      <div class=\"actions\">\n        <button class=\"custom-btn\"  (click)=\"goToCart()\">Go to Cart</button>\n        <div class=\"other\">\n          <button class=\"custom-btn cancel\" (click)=\"close()\">Okay</button>\n        </div>\n      </div>\n    </div>\n  </section>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { CartConfirmModalService } from 'src/app/services/cart-confirm-modal.service';\n\n@Component({\n  selector: 'app-cart-confirm-modal',\n  templateUrl: './cart-confirm-modal.component.html',\n  styleUrls: ['./cart-confirm-modal.component.scss'],\n})\nexport class CartConfirmModalComponent implements OnInit {\n  display$: Observable<'open' | 'close'>;\n\n  constructor(\n    private modalService: CartConfirmModalService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.display$ = this.modalService.watch();\n  }\n\n  close() {\n    this.modalService.close();\n  }\n\n  goToCart() {\n    this.router.navigateByUrl('/products/cart');\n    this.close();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"page-footer font-small bg-light pt-4\">\n  <div class=\"container-fluid text-center text-md-left\">\n    <div class=\"row\">\n      <div class=\"col-md-1 mt-md-0 mt-3\"></div>\n      <div class=\"col-md-4 mt-md-0 mt-3\">\n        <a class=\"navbar-brand\" [routerLink]=\"['/']\">\n          <img class=\"brand-logo\" src=\"assets/images/envispace-logo.jpg\" />\n        </a>\n        <p>\n          ENVI SPACE - TƯ VẤN THIẾT KẾ, THI CÔNG VÀ CUNG ỨNG VẬT LIỆU XÂY DỰNG <br />\n          Địa chỉ: 2B Văn Cao, Xuân Phú, Thành phố Huế, Thừa Thiên Huế <br />\n          Hotline: 0907664748 - 0903531305\n          Email: info@envispace.vn\n        </p>\n      </div>\n      <hr class=\"clearfix w-100 d-md-none pb-3\" />\n      <div class=\"col-md-2 mb-md-0 mb-3\">\n        <h5 class=\"text-uppercase footer-title\">Community</h5>\n        <ul class=\"list-unstyled\">\n          <li>\n            <a class=\"footer-items\" [routerLink]=\"['/about']\">About Us</a>\n          </li>\n          <li>\n            <a class=\"footer-items\" [routerLink]=\"['/']\">Home</a>\n          </li>\n        </ul>\n      </div>\n      <div class=\"col-md-2 mb-md-0 mb-3\">\n        <h5 class=\"text-uppercase footer-title\">Links</h5>\n\n        <ul class=\"list-unstyled text-dark\">\n          <li>\n            <a class=\"footer-items\" [routerLink]=\"['/products/cart']\">Cart</a>\n          </li>\n          <li>\n            <a class=\"footer-items\" [routerLink]=\"['/products/orders']\">\n              Purchases\n            </a>\n          </li>\n        </ul>\n      </div>\n      <div class=\"col-md-2 mb-md-0 mb-3\">\n        <h5 class=\"text-uppercase footer-title\">Follow Us</h5>\n        <ul class=\"list-unstyled row\">\n          <li>\n            <a [routerLink]=\"['/']\">\n              <img class=\"social\" src=\"assets/images/twitter.svg\" />\n            </a>\n          </li>\n          <li>\n            <a href=\"https://www.facebook.com/EnviSpaceHue\">\n              <img class=\"social\" src=\"assets/images/facebook_color.svg\" />\n            </a>\n          </li>\n          <li>\n            <a [routerLink]=\"['/']\">\n              <img class=\"social\" src=\"assets/images/instagram.svg\" />\n            </a>\n          </li>\n          <li>\n            <a [routerLink]=\"['/']\">\n              <img class=\"social\" src=\"assets/images/tumblr.svg\" />\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n  <div class=\"footer-copyright text-center\">\n    © 2021 Copyright <img style=\"width: 30px; height: 30px;\" src=\"assets/images/envispace-icon.jpg\" />\n    <a class=\"footer-items\" [routerLink]=\"['/']\"> ENVI SPACE </a>\n  </div>\n  <div>\n    <a href=\"tel:0903531305\" style=\"display: block;\" rel=\"nofollow\">\n      <div class=\"mypage-alo-phone\">\n        <div class=\"animated infinite zoomIn mypage-alo-ph-circle\"></div>\n        <div class=\"animated infinite pulse mypage-alo-ph-circle-fill\"></div>\n        <div class=\"animated infinite tada mypage-alo-ph-img-circle\"></div>\n        <span>0903 531 305</span>\n      </div>\n    </a>\n    <a href=\"https://zalo.me/0903531305\" class=\"numberzalo\" style=\"display: block;\" rel=\"nofollow\">\n      <img src=\"assets/images/zalo.png\" alt=\"0903531305\">\n    </a>\n  </div>\n</footer>","<ng-container *ngIf=\"display$ | async as display\">\n  <section [class.open]=\"display === 'open'\" (click)=\"close()\">\n    <div (click)=\"$event.stopPropagation()\">\n      <h1>Success</h1>\n      <p> {{ message }} </p>\n      <hr />\n      <div class=\"actions\">\n        <div class=\"other\">\n          <button class=\"custom-btn\" (click)=\"close()\">Okay</button>\n        </div>\n      </div>\n    </div>\n  </section>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { FormSubmitModalService } from 'src/app/services/form-submit-modal.service';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { UpdateStatusModalService } from 'src/app/services/update-status-modal.service';\n\n@Component({\n  selector: 'app-form-submit-modal',\n  templateUrl: './form-submit-modal.component.html',\n  styleUrls: ['./form-submit-modal.component.scss'],\n})\nexport class FormSubmitModalComponent implements OnInit {\n  display$: Observable<'open' | 'close'>;\n  message;\n\n  constructor(\n    private modalService: FormSubmitModalService,\n    public loadingService: LoadingService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.display$ = this.modalService.watch();\n    this.openSubscription();\n  }\n  openSubscription() {\n    this.display$.subscribe((res) => {\n      this.message = this.modalService.message;\n    });\n  }\n\n  close() {\n    this.modalService.close();\n    this.router.navigateByUrl(this.modalService.url);\n  }\n}\n","<ng-container *ngIf=\"display$ | async as display\">\n  <section [class.open]=\"display === 'open'\" (click)=\"close()\">\n    <div (click)=\"$event.stopPropagation()\">\n      <h1>Something went wrong</h1>\n      <p> {{ error }} </p>\n      <hr>\n      <div class=\"actions\">\n        <div class=\"other\">\n          <button class=\"custom-btn cancel\" (click)=\"close()\">Okay</button>\n        </div>\n      </div>\n    </div>\n  </section>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GlobalErrorModalService } from 'src/app/services/global-error-modal.service';\n\n@Component({\n  selector: 'app-global-error-modal',\n  templateUrl: './global-error-modal.component.html',\n  styleUrls: ['./global-error-modal.component.scss'],\n})\nexport class GlobalErrorModalComponent implements OnInit {\n  display$: Observable<'open' | 'close'>;\n  error;\n\n  constructor(private modalService: GlobalErrorModalService) {}\n\n  ngOnInit() {\n    this.display$ = this.modalService.watch();\n    this.openSubscription();\n  }\n  openSubscription() {\n    this.display$.subscribe((res) => (this.error = this.modalService.error));\n  }\n\n  close() {\n    this.modalService.close();\n  }\n}\n","<div *ngIf=\"isMobile\" (click)=\"switchShowMenu()\" style=\"cursor: pointer;\"><img [src]=\"menuIcon\"\n    style=\"width:64px; height:64px\" /></div>\n<nav *ngIf=\"ishowMenu\" class=\"navbar navbar-expand-sm bg-light navbar-light py-3 sticky-top\" id=\"menu-main\">\n  <ul class=\"navbar-nav\" style=\"display: flex; align-items: center;\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" (click)=\"gotoHome()\">Home</a>\n    </li>\n    <li class=\"nav-item\" class=\"dropdown\">\n      <a class=\"nav-link dropdown-toggle\" id=\"navbarDropdownDesign\" role=\"button\" data-toggle=\"dropdown\"\n        aria-haspopup=\"true\" aria-expanded=\"false\">TƯ VẤN THIẾT KẾ</a>\n      <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownDesign\">\n        <a *ngFor=\"let category of designCategories\" class=\"dropdown-item\" (click)=\"menuClick(0, category.id)\">\n          {{ category.name }}\n        </a>\n      </div>\n    </li>\n    <li class=\"nav-item\" class=\"dropdown\">\n      <a class=\"nav-link dropdown-toggle\" id=\"navbarDropdownPaint\" role=\"button\" data-toggle=\"dropdown\"\n        aria-haspopup=\"true\" aria-expanded=\"false\">SƠN</a>\n      <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownPaint\">\n        <a *ngFor=\"let category of paintCategories\" class=\"dropdown-item\" (click)=\"menuClick(1, category.id)\">\n          {{ category.name }}\n        </a>\n      </div>\n    </li>\n    <li class=\"nav-item\" class=\"dropdown\">\n      <a class=\"nav-link dropdown-toggle\" id=\"navbarDropdownTile\" role=\"button\" data-toggle=\"dropdown\"\n        aria-haspopup=\"true\" aria-expanded=\"false\">GẠCH</a>\n      <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownTile\">\n        <a *ngFor=\"let category of tileCategories\" class=\"dropdown-item\" (click)=\"menuClick(2, category.id)\">\n          {{ category.name }}\n        </a>\n      </div>\n    </li>\n    <li class=\"nav-item\" class=\"dropdown\">\n      <a class=\"nav-link dropdown-toggle\" id=\"navbarDropdownOthers\" role=\"button\" data-toggle=\"dropdown\"\n        aria-haspopup=\"true\" aria-expanded=\"false\">VẬT LIỆU XÂY DỰNG</a>\n      <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownOthers\">\n        <a *ngFor=\"let category of otherCategories\" class=\"dropdown-item\" (click)=\"menuClick(3, category.id)\">\n          {{ category.name }}\n        </a>\n      </div>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [routerLink]=\"['/news']\">Tin tức</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [routerLink]=\"['/others']\">Hoạt động cộng đồng</a>\n    </li>\n  </ul>\n  <ul class=\"navbar-nav ml-auto\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [routerLink]=\"['/about']\">About us</a>\n    </li>\n    <li class=\"nav-item\" *ngIf=\"!isLogin\">\n      <a class=\"nav-link\" [routerLink]=\"['/auth/login']\">Login</a>\n    </li>\n    <li class=\"nav-item\" class=\"dropdown\" *ngIf=\"isLogin\">\n      <a class=\"nav-link dropdown-toggle\" id=\"navbarDropdownAdmin\" role=\"button\" data-toggle=\"dropdown\"\n        aria-haspopup=\"true\" aria-expanded=\"false\">Admin</a>\n      <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownAdmin\">\n        <a class=\"dropdown-item\" [routerLink]=\"['/admin/view']\">\n          Products\n        </a>\n        <a class=\"dropdown-item\" [routerLink]=\"['/admin/categoryview']\">\n          Categories\n        </a>\n        <a class=\"dropdown-item\" [routerLink]=\"['/admin/newsview']\">\n          News\n        </a><a class=\"dropdown-item\" (click)=\"logOut()\">\n          Logout\n        </a>\n      </div>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" style=\"display: flex;\" id=\"cart-on-menu\" [routerLink]=\"['/products/cart']\">\n        <img src=\"../../../assets/images/cart.svg\" width=\"40px\" height=\"40px\" />\n        <div class=\"cart-item\">{{numberOfItemInCart}}</div>\n      </a>\n      <div id=\"trigger-update-cart\" (click)=\"onReload()\"></div>\n    </li>\n  </ul>\n</nav>\n\n<div *ngIf=\"!isInAdmin()\">\n  <ng-image-slider [images]=\"imageObject\" #nav [infinite]=\"true\" [autoSlide]=\"1\"\n    [imageSize]=\"{width: '100%', height: '90%'}\"></ng-image-slider>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CategoryType } from 'src/app/models/category-type';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { DeviceDetectorService } from 'ngx-device-detector';\nimport {CartItem} from 'src/app/models/cart-item';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n})\nexport class NavigationComponent implements OnInit {\n\n  designCategories: CategoryType[] = [];\n  paintCategories: CategoryType[] = [];\n  tileCategories: CategoryType[] = [];\n  otherCategories: CategoryType[] = [];\n\n  ishowMenu: boolean = true;\n  isMobile = this.deviceService.isMobile();\n\n  numberOfItemInCart: number;\n  isLogin = this.authService.isAuthenticated();\n  \n  imageObject: Array<object> = [{\n    image: '../../../assets/images/slides/1.jpg',\n    thumbImage: '../../../assets/images/slides/1.jpg',\n    alt: '',\n    title: ''\n  }, {\n    image: '../../../assets/images/slides/2.jpg',\n    thumbImage: '../../../assets/images/slides/2.jpg',\n    order: 1\n  }, {\n    image: '../../../assets/images/slides/3.jpg',\n    thumbImage: '../../../assets/images/slides/3.jpg',\n    order: 1\n  }\n  ];\n\n  menuIcon=\"../../../assets/images/menu.png\";\n  constructor(\n    private authService: AuthService,\n    private categoryService: CategoryService,\n    private router: Router,\n    private deviceService: DeviceDetectorService\n  ) { }\n\n  ngOnInit(): void {\n    if (this.isMobile) {\n      this.ishowMenu = false;\n    }\n    this.categoryService.getTypesByCategory(0).subscribe((data) => {\n      this.designCategories = data;\n    });\n    this.categoryService.getTypesByCategory(1).subscribe((data) => {\n      this.paintCategories = data;\n    });\n    this.categoryService.getTypesByCategory(2).subscribe((data) => {\n      this.tileCategories = data;\n    });\n    this.categoryService.getTypesByCategory(3).subscribe((data) => {\n      this.otherCategories = data;\n    });\n\n    this.loadCardItems();\n  }\n\n  loadCardItems(){\n    this.numberOfItemInCart = 0;\n    var data = window.localStorage.getItem(\"cart-items\");\n    if(data){\n      var cartItems = <CartItem[]>JSON.parse(data);\n      this.numberOfItemInCart = cartItems.length;\n    }\n  }\n\n  onReload(){\n    this.loadCardItems();\n  }\n\n  logOut() {\n    this.authService.logout();\n  }\n\n  redirectHome() {\n    this.router.navigateByUrl('/');\n  }\n\n  menuClick(categoryId, typeId) {\n    this.router.navigate([\"./products/\"+categoryId+\"/\"+typeId])\n  }\n\n  gotoHome(){\n    this.router.navigate([\"./products/\"])\n  }\n\n  switchShowMenu(){\n    this.ishowMenu = !this.ishowMenu;\n  }\n\n  isInAdmin(){\n    return window.location.href.toLocaleLowerCase().indexOf(\"admin\") > -1\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found works!</p>\n","<ng-container *ngIf=\"display$ | async as display\">\n  <section [class.open]=\"display === 'open'\" (click)=\"close()\">\n    <div (click)=\"$event.stopPropagation()\">\n      <h1>Do you really want to cancel?</h1>\n      <p>Action is irreversible.</p>\n      <hr>\n      <div class=\"actions\">\n        <button class=\"custom-btn\"  (click)=\"triggerCancelOrder()\">Yes</button>\n        <div class=\"other\">\n          <button class=\"custom-btn cancel\" (click)=\"close()\">No</button>\n        </div>\n      </div>\n    </div>\n  </section>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { OrderCancelModalService } from 'src/app/services/order-cancel-modal.service';\n\n@Component({\n  selector: 'app-order-cancel-modal',\n  templateUrl: './order-cancel-modal.component.html',\n  styleUrls: ['./order-cancel-modal.component.scss']\n})\nexport class OrderCancelModalComponent implements OnInit {\n\n  display$: Observable<'open' | 'close' | 'cancel-order'>;\n\n  constructor(\n    private modalService: OrderCancelModalService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.display$ = this.modalService.watch();\n  }\n\n  close() {\n    this.modalService.close();\n  }\n\n  triggerCancelOrder() {\n    this.modalService.cancelOrder();\n  }\n}\n","<ng-container *ngIf=\"display$ | async as display\">\n  <section [class.open]=\"display === 'open'\">\n    <div (click)=\"$event.stopPropagation()\">\n      <h1>Updte Status</h1>\n      <p>Product ID: {{ product?.productId }}</p>\n      <p>Current Status: {{ product?.productStatus }}</p>\n      <div class=\"form-group\">\n        <select class=\"form-control\" [(ngModel)]=\"currentStatus\">\n          <option value=\"\" disabled=\"true\" [selected]=\"true\">\n            Select a Category\n          </option>\n          <option *ngFor=\"let item of statusTypes | keyvalue\" [value]=\"item.key\">\n            {{ item.value }}\n          </option>\n        </select>\n      </div>\n      <hr />\n      <div class=\"actions\">\n        <div class=\"other\">\n          <button [disabled]=\"currentStatus===product?.productStatus\" class=\"custom-btn\" (click)=\"update(product.id)\">\n            <span\n              *ngIf=\"loadingService.loading\"\n              class=\"spinner-border spinner-border-sm\"\n            ></span>\n            Update\n          </button>\n          <button class=\"custom-btn cancel\" (click)=\"close()\">Cancel</button>\n        </div>\n      </div>\n    </div>\n  </section>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { ProductStatus } from 'src/app/models/product-status.model';\nimport { Product } from 'src/app/models/product.model';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { ProductService } from 'src/app/services/product.service';\nimport { UpdateStatusModalService } from 'src/app/services/update-status-modal.service';\n\n@Component({\n  selector: 'app-update-status-modal',\n  templateUrl: './update-status-modal.component.html',\n  styleUrls: ['./update-status-modal.component.scss'],\n})\nexport class UpdateStatusModalComponent implements OnInit {\n  display$: Observable<'open' | 'close'>;\n  product: Product;\n  statusTypes = ProductStatus;\n  currentStatus = 'DISABLED';\n\n  constructor(\n    private modalService: UpdateStatusModalService,\n    public loadingService: LoadingService,\n    private productService: ProductService\n  ) {}\n\n  ngOnInit() {\n    this.display$ = this.modalService.watch();\n    this.openSubscription();\n  }\n  openSubscription() {\n    this.display$.subscribe((res) => {\n      this.product = this.modalService.product;\n    });\n  }\n\n  close() {\n    this.modalService.close();\n  }\n\n  update(productId) {\n    this.product.productStatus = this.currentStatus;\n    this.loadingService.enableLoading();\n    this.productService\n      .updateProduct(productId, this.product)\n      .pipe(take(1))\n      .subscribe({\n        next: () => {\n          this.loadingService.disableLoading();\n          this.close();\n        },\n      });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  protocol: 'http://',\n  applicationUrl: 'ec2-3-0-97-36.ap-southeast-1.compute.amazonaws.com:1088/envispace',\n  authService: '',\n  productService: '',\n  orderService: '',\n  paymentService: '',\n  cartService: '',\n  mapQuestAPIKey: 'nXLMbpX6U0545mAaAJyeI2QQd1JYVqG4',\n  mapQuestUrl: 'http://www.mapquestapi.com/directions/v2/route',\n  from: '400072',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}